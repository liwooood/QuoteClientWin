// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: quotewarning.proto

#ifndef PROTOBUF_quotewarning_2eproto__INCLUDED
#define PROTOBUF_quotewarning_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace quotewarning {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_quotewarning_2eproto();
void protobuf_AssignDesc_quotewarning_2eproto();
void protobuf_ShutdownFile_quotewarning_2eproto();

class AddWarningRequest;
class AddWarningResponse;
class UpdateWarningRequest;
class UpdateWarningResponse;
class RemoveWarningRequest;
class RemoveWarningResponse;
class QueryWarningRequest;
class QueryWarningResponse;
class QueryWarningResponse_Stock;

// ===================================================================

class AddWarningRequest : public ::google::protobuf::Message {
 public:
  AddWarningRequest();
  virtual ~AddWarningRequest();
  
  AddWarningRequest(const AddWarningRequest& from);
  
  inline AddWarningRequest& operator=(const AddWarningRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddWarningRequest& default_instance();
  
  void Swap(AddWarningRequest* other);
  
  // implements Message ----------------------------------------------
  
  AddWarningRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddWarningRequest& from);
  void MergeFrom(const AddWarningRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string custid = 1;
  inline bool has_custid() const;
  inline void clear_custid();
  static const int kCustidFieldNumber = 1;
  inline const ::std::string& custid() const;
  inline void set_custid(const ::std::string& value);
  inline void set_custid(const char* value);
  inline void set_custid(const char* value, size_t size);
  inline ::std::string* mutable_custid();
  inline ::std::string* release_custid();
  
  // optional string orgid = 2;
  inline bool has_orgid() const;
  inline void clear_orgid();
  static const int kOrgidFieldNumber = 2;
  inline const ::std::string& orgid() const;
  inline void set_orgid(const ::std::string& value);
  inline void set_orgid(const char* value);
  inline void set_orgid(const char* value, size_t size);
  inline ::std::string* mutable_orgid();
  inline ::std::string* release_orgid();
  
  // required string secucode = 3;
  inline bool has_secucode() const;
  inline void clear_secucode();
  static const int kSecucodeFieldNumber = 3;
  inline const ::std::string& secucode() const;
  inline void set_secucode(const ::std::string& value);
  inline void set_secucode(const char* value);
  inline void set_secucode(const char* value, size_t size);
  inline ::std::string* mutable_secucode();
  inline ::std::string* release_secucode();
  
  // required int32 exchange = 4;
  inline bool has_exchange() const;
  inline void clear_exchange();
  static const int kExchangeFieldNumber = 4;
  inline ::google::protobuf::int32 exchange() const;
  inline void set_exchange(::google::protobuf::int32 value);
  
  // optional float pricehigh = 5;
  inline bool has_pricehigh() const;
  inline void clear_pricehigh();
  static const int kPricehighFieldNumber = 5;
  inline float pricehigh() const;
  inline void set_pricehigh(float value);
  
  // optional float pricelow = 6;
  inline bool has_pricelow() const;
  inline void clear_pricelow();
  static const int kPricelowFieldNumber = 6;
  inline float pricelow() const;
  inline void set_pricelow(float value);
  
  // optional float rangeup = 7;
  inline bool has_rangeup() const;
  inline void clear_rangeup();
  static const int kRangeupFieldNumber = 7;
  inline float rangeup() const;
  inline void set_rangeup(float value);
  
  // optional float rangedown = 8;
  inline bool has_rangedown() const;
  inline void clear_rangedown();
  static const int kRangedownFieldNumber = 8;
  inline float rangedown() const;
  inline void set_rangedown(float value);
  
  // @@protoc_insertion_point(class_scope:quotewarning.AddWarningRequest)
 private:
  inline void set_has_custid();
  inline void clear_has_custid();
  inline void set_has_orgid();
  inline void clear_has_orgid();
  inline void set_has_secucode();
  inline void clear_has_secucode();
  inline void set_has_exchange();
  inline void clear_has_exchange();
  inline void set_has_pricehigh();
  inline void clear_has_pricehigh();
  inline void set_has_pricelow();
  inline void clear_has_pricelow();
  inline void set_has_rangeup();
  inline void clear_has_rangeup();
  inline void set_has_rangedown();
  inline void clear_has_rangedown();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* custid_;
  ::std::string* orgid_;
  ::std::string* secucode_;
  ::google::protobuf::int32 exchange_;
  float pricehigh_;
  float pricelow_;
  float rangeup_;
  float rangedown_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  friend void  protobuf_AddDesc_quotewarning_2eproto();
  friend void protobuf_AssignDesc_quotewarning_2eproto();
  friend void protobuf_ShutdownFile_quotewarning_2eproto();
  
  void InitAsDefaultInstance();
  static AddWarningRequest* default_instance_;
};
// -------------------------------------------------------------------

class AddWarningResponse : public ::google::protobuf::Message {
 public:
  AddWarningResponse();
  virtual ~AddWarningResponse();
  
  AddWarningResponse(const AddWarningResponse& from);
  
  inline AddWarningResponse& operator=(const AddWarningResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddWarningResponse& default_instance();
  
  void Swap(AddWarningResponse* other);
  
  // implements Message ----------------------------------------------
  
  AddWarningResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddWarningResponse& from);
  void MergeFrom(const AddWarningResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:quotewarning.AddWarningResponse)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_quotewarning_2eproto();
  friend void protobuf_AssignDesc_quotewarning_2eproto();
  friend void protobuf_ShutdownFile_quotewarning_2eproto();
  
  void InitAsDefaultInstance();
  static AddWarningResponse* default_instance_;
};
// -------------------------------------------------------------------

class UpdateWarningRequest : public ::google::protobuf::Message {
 public:
  UpdateWarningRequest();
  virtual ~UpdateWarningRequest();
  
  UpdateWarningRequest(const UpdateWarningRequest& from);
  
  inline UpdateWarningRequest& operator=(const UpdateWarningRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateWarningRequest& default_instance();
  
  void Swap(UpdateWarningRequest* other);
  
  // implements Message ----------------------------------------------
  
  UpdateWarningRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateWarningRequest& from);
  void MergeFrom(const UpdateWarningRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string custid = 1;
  inline bool has_custid() const;
  inline void clear_custid();
  static const int kCustidFieldNumber = 1;
  inline const ::std::string& custid() const;
  inline void set_custid(const ::std::string& value);
  inline void set_custid(const char* value);
  inline void set_custid(const char* value, size_t size);
  inline ::std::string* mutable_custid();
  inline ::std::string* release_custid();
  
  // optional string orgid = 2;
  inline bool has_orgid() const;
  inline void clear_orgid();
  static const int kOrgidFieldNumber = 2;
  inline const ::std::string& orgid() const;
  inline void set_orgid(const ::std::string& value);
  inline void set_orgid(const char* value);
  inline void set_orgid(const char* value, size_t size);
  inline ::std::string* mutable_orgid();
  inline ::std::string* release_orgid();
  
  // required string secucode = 3;
  inline bool has_secucode() const;
  inline void clear_secucode();
  static const int kSecucodeFieldNumber = 3;
  inline const ::std::string& secucode() const;
  inline void set_secucode(const ::std::string& value);
  inline void set_secucode(const char* value);
  inline void set_secucode(const char* value, size_t size);
  inline ::std::string* mutable_secucode();
  inline ::std::string* release_secucode();
  
  // required int32 exchange = 4;
  inline bool has_exchange() const;
  inline void clear_exchange();
  static const int kExchangeFieldNumber = 4;
  inline ::google::protobuf::int32 exchange() const;
  inline void set_exchange(::google::protobuf::int32 value);
  
  // optional float pricehigh = 5;
  inline bool has_pricehigh() const;
  inline void clear_pricehigh();
  static const int kPricehighFieldNumber = 5;
  inline float pricehigh() const;
  inline void set_pricehigh(float value);
  
  // optional float pricelow = 6;
  inline bool has_pricelow() const;
  inline void clear_pricelow();
  static const int kPricelowFieldNumber = 6;
  inline float pricelow() const;
  inline void set_pricelow(float value);
  
  // optional float rangeup = 7;
  inline bool has_rangeup() const;
  inline void clear_rangeup();
  static const int kRangeupFieldNumber = 7;
  inline float rangeup() const;
  inline void set_rangeup(float value);
  
  // optional float rangedown = 8;
  inline bool has_rangedown() const;
  inline void clear_rangedown();
  static const int kRangedownFieldNumber = 8;
  inline float rangedown() const;
  inline void set_rangedown(float value);
  
  // @@protoc_insertion_point(class_scope:quotewarning.UpdateWarningRequest)
 private:
  inline void set_has_custid();
  inline void clear_has_custid();
  inline void set_has_orgid();
  inline void clear_has_orgid();
  inline void set_has_secucode();
  inline void clear_has_secucode();
  inline void set_has_exchange();
  inline void clear_has_exchange();
  inline void set_has_pricehigh();
  inline void clear_has_pricehigh();
  inline void set_has_pricelow();
  inline void clear_has_pricelow();
  inline void set_has_rangeup();
  inline void clear_has_rangeup();
  inline void set_has_rangedown();
  inline void clear_has_rangedown();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* custid_;
  ::std::string* orgid_;
  ::std::string* secucode_;
  ::google::protobuf::int32 exchange_;
  float pricehigh_;
  float pricelow_;
  float rangeup_;
  float rangedown_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  friend void  protobuf_AddDesc_quotewarning_2eproto();
  friend void protobuf_AssignDesc_quotewarning_2eproto();
  friend void protobuf_ShutdownFile_quotewarning_2eproto();
  
  void InitAsDefaultInstance();
  static UpdateWarningRequest* default_instance_;
};
// -------------------------------------------------------------------

class UpdateWarningResponse : public ::google::protobuf::Message {
 public:
  UpdateWarningResponse();
  virtual ~UpdateWarningResponse();
  
  UpdateWarningResponse(const UpdateWarningResponse& from);
  
  inline UpdateWarningResponse& operator=(const UpdateWarningResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateWarningResponse& default_instance();
  
  void Swap(UpdateWarningResponse* other);
  
  // implements Message ----------------------------------------------
  
  UpdateWarningResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateWarningResponse& from);
  void MergeFrom(const UpdateWarningResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:quotewarning.UpdateWarningResponse)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_quotewarning_2eproto();
  friend void protobuf_AssignDesc_quotewarning_2eproto();
  friend void protobuf_ShutdownFile_quotewarning_2eproto();
  
  void InitAsDefaultInstance();
  static UpdateWarningResponse* default_instance_;
};
// -------------------------------------------------------------------

class RemoveWarningRequest : public ::google::protobuf::Message {
 public:
  RemoveWarningRequest();
  virtual ~RemoveWarningRequest();
  
  RemoveWarningRequest(const RemoveWarningRequest& from);
  
  inline RemoveWarningRequest& operator=(const RemoveWarningRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveWarningRequest& default_instance();
  
  void Swap(RemoveWarningRequest* other);
  
  // implements Message ----------------------------------------------
  
  RemoveWarningRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RemoveWarningRequest& from);
  void MergeFrom(const RemoveWarningRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string custid = 1;
  inline bool has_custid() const;
  inline void clear_custid();
  static const int kCustidFieldNumber = 1;
  inline const ::std::string& custid() const;
  inline void set_custid(const ::std::string& value);
  inline void set_custid(const char* value);
  inline void set_custid(const char* value, size_t size);
  inline ::std::string* mutable_custid();
  inline ::std::string* release_custid();
  
  // optional string orgid = 2;
  inline bool has_orgid() const;
  inline void clear_orgid();
  static const int kOrgidFieldNumber = 2;
  inline const ::std::string& orgid() const;
  inline void set_orgid(const ::std::string& value);
  inline void set_orgid(const char* value);
  inline void set_orgid(const char* value, size_t size);
  inline ::std::string* mutable_orgid();
  inline ::std::string* release_orgid();
  
  // required string secucode = 3;
  inline bool has_secucode() const;
  inline void clear_secucode();
  static const int kSecucodeFieldNumber = 3;
  inline const ::std::string& secucode() const;
  inline void set_secucode(const ::std::string& value);
  inline void set_secucode(const char* value);
  inline void set_secucode(const char* value, size_t size);
  inline ::std::string* mutable_secucode();
  inline ::std::string* release_secucode();
  
  // required int32 exchange = 4;
  inline bool has_exchange() const;
  inline void clear_exchange();
  static const int kExchangeFieldNumber = 4;
  inline ::google::protobuf::int32 exchange() const;
  inline void set_exchange(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:quotewarning.RemoveWarningRequest)
 private:
  inline void set_has_custid();
  inline void clear_has_custid();
  inline void set_has_orgid();
  inline void clear_has_orgid();
  inline void set_has_secucode();
  inline void clear_has_secucode();
  inline void set_has_exchange();
  inline void clear_has_exchange();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* custid_;
  ::std::string* orgid_;
  ::std::string* secucode_;
  ::google::protobuf::int32 exchange_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_quotewarning_2eproto();
  friend void protobuf_AssignDesc_quotewarning_2eproto();
  friend void protobuf_ShutdownFile_quotewarning_2eproto();
  
  void InitAsDefaultInstance();
  static RemoveWarningRequest* default_instance_;
};
// -------------------------------------------------------------------

class RemoveWarningResponse : public ::google::protobuf::Message {
 public:
  RemoveWarningResponse();
  virtual ~RemoveWarningResponse();
  
  RemoveWarningResponse(const RemoveWarningResponse& from);
  
  inline RemoveWarningResponse& operator=(const RemoveWarningResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveWarningResponse& default_instance();
  
  void Swap(RemoveWarningResponse* other);
  
  // implements Message ----------------------------------------------
  
  RemoveWarningResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RemoveWarningResponse& from);
  void MergeFrom(const RemoveWarningResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:quotewarning.RemoveWarningResponse)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_quotewarning_2eproto();
  friend void protobuf_AssignDesc_quotewarning_2eproto();
  friend void protobuf_ShutdownFile_quotewarning_2eproto();
  
  void InitAsDefaultInstance();
  static RemoveWarningResponse* default_instance_;
};
// -------------------------------------------------------------------

class QueryWarningRequest : public ::google::protobuf::Message {
 public:
  QueryWarningRequest();
  virtual ~QueryWarningRequest();
  
  QueryWarningRequest(const QueryWarningRequest& from);
  
  inline QueryWarningRequest& operator=(const QueryWarningRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryWarningRequest& default_instance();
  
  void Swap(QueryWarningRequest* other);
  
  // implements Message ----------------------------------------------
  
  QueryWarningRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryWarningRequest& from);
  void MergeFrom(const QueryWarningRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string custid = 1;
  inline bool has_custid() const;
  inline void clear_custid();
  static const int kCustidFieldNumber = 1;
  inline const ::std::string& custid() const;
  inline void set_custid(const ::std::string& value);
  inline void set_custid(const char* value);
  inline void set_custid(const char* value, size_t size);
  inline ::std::string* mutable_custid();
  inline ::std::string* release_custid();
  
  // required string orgid = 2;
  inline bool has_orgid() const;
  inline void clear_orgid();
  static const int kOrgidFieldNumber = 2;
  inline const ::std::string& orgid() const;
  inline void set_orgid(const ::std::string& value);
  inline void set_orgid(const char* value);
  inline void set_orgid(const char* value, size_t size);
  inline ::std::string* mutable_orgid();
  inline ::std::string* release_orgid();
  
  // optional string secucode = 3;
  inline bool has_secucode() const;
  inline void clear_secucode();
  static const int kSecucodeFieldNumber = 3;
  inline const ::std::string& secucode() const;
  inline void set_secucode(const ::std::string& value);
  inline void set_secucode(const char* value);
  inline void set_secucode(const char* value, size_t size);
  inline ::std::string* mutable_secucode();
  inline ::std::string* release_secucode();
  
  // optional int32 exchange = 4;
  inline bool has_exchange() const;
  inline void clear_exchange();
  static const int kExchangeFieldNumber = 4;
  inline ::google::protobuf::int32 exchange() const;
  inline void set_exchange(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:quotewarning.QueryWarningRequest)
 private:
  inline void set_has_custid();
  inline void clear_has_custid();
  inline void set_has_orgid();
  inline void clear_has_orgid();
  inline void set_has_secucode();
  inline void clear_has_secucode();
  inline void set_has_exchange();
  inline void clear_has_exchange();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* custid_;
  ::std::string* orgid_;
  ::std::string* secucode_;
  ::google::protobuf::int32 exchange_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_quotewarning_2eproto();
  friend void protobuf_AssignDesc_quotewarning_2eproto();
  friend void protobuf_ShutdownFile_quotewarning_2eproto();
  
  void InitAsDefaultInstance();
  static QueryWarningRequest* default_instance_;
};
// -------------------------------------------------------------------

class QueryWarningResponse_Stock : public ::google::protobuf::Message {
 public:
  QueryWarningResponse_Stock();
  virtual ~QueryWarningResponse_Stock();
  
  QueryWarningResponse_Stock(const QueryWarningResponse_Stock& from);
  
  inline QueryWarningResponse_Stock& operator=(const QueryWarningResponse_Stock& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryWarningResponse_Stock& default_instance();
  
  void Swap(QueryWarningResponse_Stock* other);
  
  // implements Message ----------------------------------------------
  
  QueryWarningResponse_Stock* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryWarningResponse_Stock& from);
  void MergeFrom(const QueryWarningResponse_Stock& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string secucode = 1;
  inline bool has_secucode() const;
  inline void clear_secucode();
  static const int kSecucodeFieldNumber = 1;
  inline const ::std::string& secucode() const;
  inline void set_secucode(const ::std::string& value);
  inline void set_secucode(const char* value);
  inline void set_secucode(const char* value, size_t size);
  inline ::std::string* mutable_secucode();
  inline ::std::string* release_secucode();
  
  // required int32 exchange = 2;
  inline bool has_exchange() const;
  inline void clear_exchange();
  static const int kExchangeFieldNumber = 2;
  inline ::google::protobuf::int32 exchange() const;
  inline void set_exchange(::google::protobuf::int32 value);
  
  // optional float pricehigh = 3;
  inline bool has_pricehigh() const;
  inline void clear_pricehigh();
  static const int kPricehighFieldNumber = 3;
  inline float pricehigh() const;
  inline void set_pricehigh(float value);
  
  // optional float pricelow = 4;
  inline bool has_pricelow() const;
  inline void clear_pricelow();
  static const int kPricelowFieldNumber = 4;
  inline float pricelow() const;
  inline void set_pricelow(float value);
  
  // optional float rangeup = 5;
  inline bool has_rangeup() const;
  inline void clear_rangeup();
  static const int kRangeupFieldNumber = 5;
  inline float rangeup() const;
  inline void set_rangeup(float value);
  
  // optional float rangedown = 6;
  inline bool has_rangedown() const;
  inline void clear_rangedown();
  static const int kRangedownFieldNumber = 6;
  inline float rangedown() const;
  inline void set_rangedown(float value);
  
  // @@protoc_insertion_point(class_scope:quotewarning.QueryWarningResponse.Stock)
 private:
  inline void set_has_secucode();
  inline void clear_has_secucode();
  inline void set_has_exchange();
  inline void clear_has_exchange();
  inline void set_has_pricehigh();
  inline void clear_has_pricehigh();
  inline void set_has_pricelow();
  inline void clear_has_pricelow();
  inline void set_has_rangeup();
  inline void clear_has_rangeup();
  inline void set_has_rangedown();
  inline void clear_has_rangedown();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* secucode_;
  ::google::protobuf::int32 exchange_;
  float pricehigh_;
  float pricelow_;
  float rangeup_;
  float rangedown_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_quotewarning_2eproto();
  friend void protobuf_AssignDesc_quotewarning_2eproto();
  friend void protobuf_ShutdownFile_quotewarning_2eproto();
  
  void InitAsDefaultInstance();
  static QueryWarningResponse_Stock* default_instance_;
};
// -------------------------------------------------------------------

class QueryWarningResponse : public ::google::protobuf::Message {
 public:
  QueryWarningResponse();
  virtual ~QueryWarningResponse();
  
  QueryWarningResponse(const QueryWarningResponse& from);
  
  inline QueryWarningResponse& operator=(const QueryWarningResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryWarningResponse& default_instance();
  
  void Swap(QueryWarningResponse* other);
  
  // implements Message ----------------------------------------------
  
  QueryWarningResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryWarningResponse& from);
  void MergeFrom(const QueryWarningResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef QueryWarningResponse_Stock Stock;
  
  // accessors -------------------------------------------------------
  
  // repeated .quotewarning.QueryWarningResponse.Stock stock = 1;
  inline int stock_size() const;
  inline void clear_stock();
  static const int kStockFieldNumber = 1;
  inline const ::quotewarning::QueryWarningResponse_Stock& stock(int index) const;
  inline ::quotewarning::QueryWarningResponse_Stock* mutable_stock(int index);
  inline ::quotewarning::QueryWarningResponse_Stock* add_stock();
  inline const ::google::protobuf::RepeatedPtrField< ::quotewarning::QueryWarningResponse_Stock >&
      stock() const;
  inline ::google::protobuf::RepeatedPtrField< ::quotewarning::QueryWarningResponse_Stock >*
      mutable_stock();
  
  // @@protoc_insertion_point(class_scope:quotewarning.QueryWarningResponse)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::quotewarning::QueryWarningResponse_Stock > stock_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_quotewarning_2eproto();
  friend void protobuf_AssignDesc_quotewarning_2eproto();
  friend void protobuf_ShutdownFile_quotewarning_2eproto();
  
  void InitAsDefaultInstance();
  static QueryWarningResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// AddWarningRequest

// required string custid = 1;
inline bool AddWarningRequest::has_custid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddWarningRequest::set_has_custid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddWarningRequest::clear_has_custid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddWarningRequest::clear_custid() {
  if (custid_ != &::google::protobuf::internal::kEmptyString) {
    custid_->clear();
  }
  clear_has_custid();
}
inline const ::std::string& AddWarningRequest::custid() const {
  return *custid_;
}
inline void AddWarningRequest::set_custid(const ::std::string& value) {
  set_has_custid();
  if (custid_ == &::google::protobuf::internal::kEmptyString) {
    custid_ = new ::std::string;
  }
  custid_->assign(value);
}
inline void AddWarningRequest::set_custid(const char* value) {
  set_has_custid();
  if (custid_ == &::google::protobuf::internal::kEmptyString) {
    custid_ = new ::std::string;
  }
  custid_->assign(value);
}
inline void AddWarningRequest::set_custid(const char* value, size_t size) {
  set_has_custid();
  if (custid_ == &::google::protobuf::internal::kEmptyString) {
    custid_ = new ::std::string;
  }
  custid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AddWarningRequest::mutable_custid() {
  set_has_custid();
  if (custid_ == &::google::protobuf::internal::kEmptyString) {
    custid_ = new ::std::string;
  }
  return custid_;
}
inline ::std::string* AddWarningRequest::release_custid() {
  clear_has_custid();
  if (custid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = custid_;
    custid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string orgid = 2;
inline bool AddWarningRequest::has_orgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddWarningRequest::set_has_orgid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddWarningRequest::clear_has_orgid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddWarningRequest::clear_orgid() {
  if (orgid_ != &::google::protobuf::internal::kEmptyString) {
    orgid_->clear();
  }
  clear_has_orgid();
}
inline const ::std::string& AddWarningRequest::orgid() const {
  return *orgid_;
}
inline void AddWarningRequest::set_orgid(const ::std::string& value) {
  set_has_orgid();
  if (orgid_ == &::google::protobuf::internal::kEmptyString) {
    orgid_ = new ::std::string;
  }
  orgid_->assign(value);
}
inline void AddWarningRequest::set_orgid(const char* value) {
  set_has_orgid();
  if (orgid_ == &::google::protobuf::internal::kEmptyString) {
    orgid_ = new ::std::string;
  }
  orgid_->assign(value);
}
inline void AddWarningRequest::set_orgid(const char* value, size_t size) {
  set_has_orgid();
  if (orgid_ == &::google::protobuf::internal::kEmptyString) {
    orgid_ = new ::std::string;
  }
  orgid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AddWarningRequest::mutable_orgid() {
  set_has_orgid();
  if (orgid_ == &::google::protobuf::internal::kEmptyString) {
    orgid_ = new ::std::string;
  }
  return orgid_;
}
inline ::std::string* AddWarningRequest::release_orgid() {
  clear_has_orgid();
  if (orgid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = orgid_;
    orgid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required string secucode = 3;
inline bool AddWarningRequest::has_secucode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddWarningRequest::set_has_secucode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddWarningRequest::clear_has_secucode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddWarningRequest::clear_secucode() {
  if (secucode_ != &::google::protobuf::internal::kEmptyString) {
    secucode_->clear();
  }
  clear_has_secucode();
}
inline const ::std::string& AddWarningRequest::secucode() const {
  return *secucode_;
}
inline void AddWarningRequest::set_secucode(const ::std::string& value) {
  set_has_secucode();
  if (secucode_ == &::google::protobuf::internal::kEmptyString) {
    secucode_ = new ::std::string;
  }
  secucode_->assign(value);
}
inline void AddWarningRequest::set_secucode(const char* value) {
  set_has_secucode();
  if (secucode_ == &::google::protobuf::internal::kEmptyString) {
    secucode_ = new ::std::string;
  }
  secucode_->assign(value);
}
inline void AddWarningRequest::set_secucode(const char* value, size_t size) {
  set_has_secucode();
  if (secucode_ == &::google::protobuf::internal::kEmptyString) {
    secucode_ = new ::std::string;
  }
  secucode_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AddWarningRequest::mutable_secucode() {
  set_has_secucode();
  if (secucode_ == &::google::protobuf::internal::kEmptyString) {
    secucode_ = new ::std::string;
  }
  return secucode_;
}
inline ::std::string* AddWarningRequest::release_secucode() {
  clear_has_secucode();
  if (secucode_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = secucode_;
    secucode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required int32 exchange = 4;
inline bool AddWarningRequest::has_exchange() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AddWarningRequest::set_has_exchange() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AddWarningRequest::clear_has_exchange() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AddWarningRequest::clear_exchange() {
  exchange_ = 0;
  clear_has_exchange();
}
inline ::google::protobuf::int32 AddWarningRequest::exchange() const {
  return exchange_;
}
inline void AddWarningRequest::set_exchange(::google::protobuf::int32 value) {
  set_has_exchange();
  exchange_ = value;
}

// optional float pricehigh = 5;
inline bool AddWarningRequest::has_pricehigh() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AddWarningRequest::set_has_pricehigh() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AddWarningRequest::clear_has_pricehigh() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AddWarningRequest::clear_pricehigh() {
  pricehigh_ = 0;
  clear_has_pricehigh();
}
inline float AddWarningRequest::pricehigh() const {
  return pricehigh_;
}
inline void AddWarningRequest::set_pricehigh(float value) {
  set_has_pricehigh();
  pricehigh_ = value;
}

// optional float pricelow = 6;
inline bool AddWarningRequest::has_pricelow() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AddWarningRequest::set_has_pricelow() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AddWarningRequest::clear_has_pricelow() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AddWarningRequest::clear_pricelow() {
  pricelow_ = 0;
  clear_has_pricelow();
}
inline float AddWarningRequest::pricelow() const {
  return pricelow_;
}
inline void AddWarningRequest::set_pricelow(float value) {
  set_has_pricelow();
  pricelow_ = value;
}

// optional float rangeup = 7;
inline bool AddWarningRequest::has_rangeup() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AddWarningRequest::set_has_rangeup() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AddWarningRequest::clear_has_rangeup() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AddWarningRequest::clear_rangeup() {
  rangeup_ = 0;
  clear_has_rangeup();
}
inline float AddWarningRequest::rangeup() const {
  return rangeup_;
}
inline void AddWarningRequest::set_rangeup(float value) {
  set_has_rangeup();
  rangeup_ = value;
}

// optional float rangedown = 8;
inline bool AddWarningRequest::has_rangedown() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AddWarningRequest::set_has_rangedown() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AddWarningRequest::clear_has_rangedown() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AddWarningRequest::clear_rangedown() {
  rangedown_ = 0;
  clear_has_rangedown();
}
inline float AddWarningRequest::rangedown() const {
  return rangedown_;
}
inline void AddWarningRequest::set_rangedown(float value) {
  set_has_rangedown();
  rangedown_ = value;
}

// -------------------------------------------------------------------

// AddWarningResponse

// -------------------------------------------------------------------

// UpdateWarningRequest

// required string custid = 1;
inline bool UpdateWarningRequest::has_custid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateWarningRequest::set_has_custid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateWarningRequest::clear_has_custid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateWarningRequest::clear_custid() {
  if (custid_ != &::google::protobuf::internal::kEmptyString) {
    custid_->clear();
  }
  clear_has_custid();
}
inline const ::std::string& UpdateWarningRequest::custid() const {
  return *custid_;
}
inline void UpdateWarningRequest::set_custid(const ::std::string& value) {
  set_has_custid();
  if (custid_ == &::google::protobuf::internal::kEmptyString) {
    custid_ = new ::std::string;
  }
  custid_->assign(value);
}
inline void UpdateWarningRequest::set_custid(const char* value) {
  set_has_custid();
  if (custid_ == &::google::protobuf::internal::kEmptyString) {
    custid_ = new ::std::string;
  }
  custid_->assign(value);
}
inline void UpdateWarningRequest::set_custid(const char* value, size_t size) {
  set_has_custid();
  if (custid_ == &::google::protobuf::internal::kEmptyString) {
    custid_ = new ::std::string;
  }
  custid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UpdateWarningRequest::mutable_custid() {
  set_has_custid();
  if (custid_ == &::google::protobuf::internal::kEmptyString) {
    custid_ = new ::std::string;
  }
  return custid_;
}
inline ::std::string* UpdateWarningRequest::release_custid() {
  clear_has_custid();
  if (custid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = custid_;
    custid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string orgid = 2;
inline bool UpdateWarningRequest::has_orgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateWarningRequest::set_has_orgid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateWarningRequest::clear_has_orgid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateWarningRequest::clear_orgid() {
  if (orgid_ != &::google::protobuf::internal::kEmptyString) {
    orgid_->clear();
  }
  clear_has_orgid();
}
inline const ::std::string& UpdateWarningRequest::orgid() const {
  return *orgid_;
}
inline void UpdateWarningRequest::set_orgid(const ::std::string& value) {
  set_has_orgid();
  if (orgid_ == &::google::protobuf::internal::kEmptyString) {
    orgid_ = new ::std::string;
  }
  orgid_->assign(value);
}
inline void UpdateWarningRequest::set_orgid(const char* value) {
  set_has_orgid();
  if (orgid_ == &::google::protobuf::internal::kEmptyString) {
    orgid_ = new ::std::string;
  }
  orgid_->assign(value);
}
inline void UpdateWarningRequest::set_orgid(const char* value, size_t size) {
  set_has_orgid();
  if (orgid_ == &::google::protobuf::internal::kEmptyString) {
    orgid_ = new ::std::string;
  }
  orgid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UpdateWarningRequest::mutable_orgid() {
  set_has_orgid();
  if (orgid_ == &::google::protobuf::internal::kEmptyString) {
    orgid_ = new ::std::string;
  }
  return orgid_;
}
inline ::std::string* UpdateWarningRequest::release_orgid() {
  clear_has_orgid();
  if (orgid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = orgid_;
    orgid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required string secucode = 3;
inline bool UpdateWarningRequest::has_secucode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateWarningRequest::set_has_secucode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateWarningRequest::clear_has_secucode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateWarningRequest::clear_secucode() {
  if (secucode_ != &::google::protobuf::internal::kEmptyString) {
    secucode_->clear();
  }
  clear_has_secucode();
}
inline const ::std::string& UpdateWarningRequest::secucode() const {
  return *secucode_;
}
inline void UpdateWarningRequest::set_secucode(const ::std::string& value) {
  set_has_secucode();
  if (secucode_ == &::google::protobuf::internal::kEmptyString) {
    secucode_ = new ::std::string;
  }
  secucode_->assign(value);
}
inline void UpdateWarningRequest::set_secucode(const char* value) {
  set_has_secucode();
  if (secucode_ == &::google::protobuf::internal::kEmptyString) {
    secucode_ = new ::std::string;
  }
  secucode_->assign(value);
}
inline void UpdateWarningRequest::set_secucode(const char* value, size_t size) {
  set_has_secucode();
  if (secucode_ == &::google::protobuf::internal::kEmptyString) {
    secucode_ = new ::std::string;
  }
  secucode_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UpdateWarningRequest::mutable_secucode() {
  set_has_secucode();
  if (secucode_ == &::google::protobuf::internal::kEmptyString) {
    secucode_ = new ::std::string;
  }
  return secucode_;
}
inline ::std::string* UpdateWarningRequest::release_secucode() {
  clear_has_secucode();
  if (secucode_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = secucode_;
    secucode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required int32 exchange = 4;
inline bool UpdateWarningRequest::has_exchange() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UpdateWarningRequest::set_has_exchange() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UpdateWarningRequest::clear_has_exchange() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UpdateWarningRequest::clear_exchange() {
  exchange_ = 0;
  clear_has_exchange();
}
inline ::google::protobuf::int32 UpdateWarningRequest::exchange() const {
  return exchange_;
}
inline void UpdateWarningRequest::set_exchange(::google::protobuf::int32 value) {
  set_has_exchange();
  exchange_ = value;
}

// optional float pricehigh = 5;
inline bool UpdateWarningRequest::has_pricehigh() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UpdateWarningRequest::set_has_pricehigh() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UpdateWarningRequest::clear_has_pricehigh() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UpdateWarningRequest::clear_pricehigh() {
  pricehigh_ = 0;
  clear_has_pricehigh();
}
inline float UpdateWarningRequest::pricehigh() const {
  return pricehigh_;
}
inline void UpdateWarningRequest::set_pricehigh(float value) {
  set_has_pricehigh();
  pricehigh_ = value;
}

// optional float pricelow = 6;
inline bool UpdateWarningRequest::has_pricelow() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UpdateWarningRequest::set_has_pricelow() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UpdateWarningRequest::clear_has_pricelow() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UpdateWarningRequest::clear_pricelow() {
  pricelow_ = 0;
  clear_has_pricelow();
}
inline float UpdateWarningRequest::pricelow() const {
  return pricelow_;
}
inline void UpdateWarningRequest::set_pricelow(float value) {
  set_has_pricelow();
  pricelow_ = value;
}

// optional float rangeup = 7;
inline bool UpdateWarningRequest::has_rangeup() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UpdateWarningRequest::set_has_rangeup() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UpdateWarningRequest::clear_has_rangeup() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UpdateWarningRequest::clear_rangeup() {
  rangeup_ = 0;
  clear_has_rangeup();
}
inline float UpdateWarningRequest::rangeup() const {
  return rangeup_;
}
inline void UpdateWarningRequest::set_rangeup(float value) {
  set_has_rangeup();
  rangeup_ = value;
}

// optional float rangedown = 8;
inline bool UpdateWarningRequest::has_rangedown() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void UpdateWarningRequest::set_has_rangedown() {
  _has_bits_[0] |= 0x00000080u;
}
inline void UpdateWarningRequest::clear_has_rangedown() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void UpdateWarningRequest::clear_rangedown() {
  rangedown_ = 0;
  clear_has_rangedown();
}
inline float UpdateWarningRequest::rangedown() const {
  return rangedown_;
}
inline void UpdateWarningRequest::set_rangedown(float value) {
  set_has_rangedown();
  rangedown_ = value;
}

// -------------------------------------------------------------------

// UpdateWarningResponse

// -------------------------------------------------------------------

// RemoveWarningRequest

// required string custid = 1;
inline bool RemoveWarningRequest::has_custid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RemoveWarningRequest::set_has_custid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RemoveWarningRequest::clear_has_custid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RemoveWarningRequest::clear_custid() {
  if (custid_ != &::google::protobuf::internal::kEmptyString) {
    custid_->clear();
  }
  clear_has_custid();
}
inline const ::std::string& RemoveWarningRequest::custid() const {
  return *custid_;
}
inline void RemoveWarningRequest::set_custid(const ::std::string& value) {
  set_has_custid();
  if (custid_ == &::google::protobuf::internal::kEmptyString) {
    custid_ = new ::std::string;
  }
  custid_->assign(value);
}
inline void RemoveWarningRequest::set_custid(const char* value) {
  set_has_custid();
  if (custid_ == &::google::protobuf::internal::kEmptyString) {
    custid_ = new ::std::string;
  }
  custid_->assign(value);
}
inline void RemoveWarningRequest::set_custid(const char* value, size_t size) {
  set_has_custid();
  if (custid_ == &::google::protobuf::internal::kEmptyString) {
    custid_ = new ::std::string;
  }
  custid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RemoveWarningRequest::mutable_custid() {
  set_has_custid();
  if (custid_ == &::google::protobuf::internal::kEmptyString) {
    custid_ = new ::std::string;
  }
  return custid_;
}
inline ::std::string* RemoveWarningRequest::release_custid() {
  clear_has_custid();
  if (custid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = custid_;
    custid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string orgid = 2;
inline bool RemoveWarningRequest::has_orgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RemoveWarningRequest::set_has_orgid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RemoveWarningRequest::clear_has_orgid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RemoveWarningRequest::clear_orgid() {
  if (orgid_ != &::google::protobuf::internal::kEmptyString) {
    orgid_->clear();
  }
  clear_has_orgid();
}
inline const ::std::string& RemoveWarningRequest::orgid() const {
  return *orgid_;
}
inline void RemoveWarningRequest::set_orgid(const ::std::string& value) {
  set_has_orgid();
  if (orgid_ == &::google::protobuf::internal::kEmptyString) {
    orgid_ = new ::std::string;
  }
  orgid_->assign(value);
}
inline void RemoveWarningRequest::set_orgid(const char* value) {
  set_has_orgid();
  if (orgid_ == &::google::protobuf::internal::kEmptyString) {
    orgid_ = new ::std::string;
  }
  orgid_->assign(value);
}
inline void RemoveWarningRequest::set_orgid(const char* value, size_t size) {
  set_has_orgid();
  if (orgid_ == &::google::protobuf::internal::kEmptyString) {
    orgid_ = new ::std::string;
  }
  orgid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RemoveWarningRequest::mutable_orgid() {
  set_has_orgid();
  if (orgid_ == &::google::protobuf::internal::kEmptyString) {
    orgid_ = new ::std::string;
  }
  return orgid_;
}
inline ::std::string* RemoveWarningRequest::release_orgid() {
  clear_has_orgid();
  if (orgid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = orgid_;
    orgid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required string secucode = 3;
inline bool RemoveWarningRequest::has_secucode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RemoveWarningRequest::set_has_secucode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RemoveWarningRequest::clear_has_secucode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RemoveWarningRequest::clear_secucode() {
  if (secucode_ != &::google::protobuf::internal::kEmptyString) {
    secucode_->clear();
  }
  clear_has_secucode();
}
inline const ::std::string& RemoveWarningRequest::secucode() const {
  return *secucode_;
}
inline void RemoveWarningRequest::set_secucode(const ::std::string& value) {
  set_has_secucode();
  if (secucode_ == &::google::protobuf::internal::kEmptyString) {
    secucode_ = new ::std::string;
  }
  secucode_->assign(value);
}
inline void RemoveWarningRequest::set_secucode(const char* value) {
  set_has_secucode();
  if (secucode_ == &::google::protobuf::internal::kEmptyString) {
    secucode_ = new ::std::string;
  }
  secucode_->assign(value);
}
inline void RemoveWarningRequest::set_secucode(const char* value, size_t size) {
  set_has_secucode();
  if (secucode_ == &::google::protobuf::internal::kEmptyString) {
    secucode_ = new ::std::string;
  }
  secucode_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RemoveWarningRequest::mutable_secucode() {
  set_has_secucode();
  if (secucode_ == &::google::protobuf::internal::kEmptyString) {
    secucode_ = new ::std::string;
  }
  return secucode_;
}
inline ::std::string* RemoveWarningRequest::release_secucode() {
  clear_has_secucode();
  if (secucode_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = secucode_;
    secucode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required int32 exchange = 4;
inline bool RemoveWarningRequest::has_exchange() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RemoveWarningRequest::set_has_exchange() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RemoveWarningRequest::clear_has_exchange() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RemoveWarningRequest::clear_exchange() {
  exchange_ = 0;
  clear_has_exchange();
}
inline ::google::protobuf::int32 RemoveWarningRequest::exchange() const {
  return exchange_;
}
inline void RemoveWarningRequest::set_exchange(::google::protobuf::int32 value) {
  set_has_exchange();
  exchange_ = value;
}

// -------------------------------------------------------------------

// RemoveWarningResponse

// -------------------------------------------------------------------

// QueryWarningRequest

// required string custid = 1;
inline bool QueryWarningRequest::has_custid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryWarningRequest::set_has_custid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryWarningRequest::clear_has_custid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryWarningRequest::clear_custid() {
  if (custid_ != &::google::protobuf::internal::kEmptyString) {
    custid_->clear();
  }
  clear_has_custid();
}
inline const ::std::string& QueryWarningRequest::custid() const {
  return *custid_;
}
inline void QueryWarningRequest::set_custid(const ::std::string& value) {
  set_has_custid();
  if (custid_ == &::google::protobuf::internal::kEmptyString) {
    custid_ = new ::std::string;
  }
  custid_->assign(value);
}
inline void QueryWarningRequest::set_custid(const char* value) {
  set_has_custid();
  if (custid_ == &::google::protobuf::internal::kEmptyString) {
    custid_ = new ::std::string;
  }
  custid_->assign(value);
}
inline void QueryWarningRequest::set_custid(const char* value, size_t size) {
  set_has_custid();
  if (custid_ == &::google::protobuf::internal::kEmptyString) {
    custid_ = new ::std::string;
  }
  custid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* QueryWarningRequest::mutable_custid() {
  set_has_custid();
  if (custid_ == &::google::protobuf::internal::kEmptyString) {
    custid_ = new ::std::string;
  }
  return custid_;
}
inline ::std::string* QueryWarningRequest::release_custid() {
  clear_has_custid();
  if (custid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = custid_;
    custid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required string orgid = 2;
inline bool QueryWarningRequest::has_orgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryWarningRequest::set_has_orgid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryWarningRequest::clear_has_orgid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryWarningRequest::clear_orgid() {
  if (orgid_ != &::google::protobuf::internal::kEmptyString) {
    orgid_->clear();
  }
  clear_has_orgid();
}
inline const ::std::string& QueryWarningRequest::orgid() const {
  return *orgid_;
}
inline void QueryWarningRequest::set_orgid(const ::std::string& value) {
  set_has_orgid();
  if (orgid_ == &::google::protobuf::internal::kEmptyString) {
    orgid_ = new ::std::string;
  }
  orgid_->assign(value);
}
inline void QueryWarningRequest::set_orgid(const char* value) {
  set_has_orgid();
  if (orgid_ == &::google::protobuf::internal::kEmptyString) {
    orgid_ = new ::std::string;
  }
  orgid_->assign(value);
}
inline void QueryWarningRequest::set_orgid(const char* value, size_t size) {
  set_has_orgid();
  if (orgid_ == &::google::protobuf::internal::kEmptyString) {
    orgid_ = new ::std::string;
  }
  orgid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* QueryWarningRequest::mutable_orgid() {
  set_has_orgid();
  if (orgid_ == &::google::protobuf::internal::kEmptyString) {
    orgid_ = new ::std::string;
  }
  return orgid_;
}
inline ::std::string* QueryWarningRequest::release_orgid() {
  clear_has_orgid();
  if (orgid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = orgid_;
    orgid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string secucode = 3;
inline bool QueryWarningRequest::has_secucode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryWarningRequest::set_has_secucode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryWarningRequest::clear_has_secucode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryWarningRequest::clear_secucode() {
  if (secucode_ != &::google::protobuf::internal::kEmptyString) {
    secucode_->clear();
  }
  clear_has_secucode();
}
inline const ::std::string& QueryWarningRequest::secucode() const {
  return *secucode_;
}
inline void QueryWarningRequest::set_secucode(const ::std::string& value) {
  set_has_secucode();
  if (secucode_ == &::google::protobuf::internal::kEmptyString) {
    secucode_ = new ::std::string;
  }
  secucode_->assign(value);
}
inline void QueryWarningRequest::set_secucode(const char* value) {
  set_has_secucode();
  if (secucode_ == &::google::protobuf::internal::kEmptyString) {
    secucode_ = new ::std::string;
  }
  secucode_->assign(value);
}
inline void QueryWarningRequest::set_secucode(const char* value, size_t size) {
  set_has_secucode();
  if (secucode_ == &::google::protobuf::internal::kEmptyString) {
    secucode_ = new ::std::string;
  }
  secucode_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* QueryWarningRequest::mutable_secucode() {
  set_has_secucode();
  if (secucode_ == &::google::protobuf::internal::kEmptyString) {
    secucode_ = new ::std::string;
  }
  return secucode_;
}
inline ::std::string* QueryWarningRequest::release_secucode() {
  clear_has_secucode();
  if (secucode_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = secucode_;
    secucode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 exchange = 4;
inline bool QueryWarningRequest::has_exchange() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QueryWarningRequest::set_has_exchange() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QueryWarningRequest::clear_has_exchange() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QueryWarningRequest::clear_exchange() {
  exchange_ = 0;
  clear_has_exchange();
}
inline ::google::protobuf::int32 QueryWarningRequest::exchange() const {
  return exchange_;
}
inline void QueryWarningRequest::set_exchange(::google::protobuf::int32 value) {
  set_has_exchange();
  exchange_ = value;
}

// -------------------------------------------------------------------

// QueryWarningResponse_Stock

// required string secucode = 1;
inline bool QueryWarningResponse_Stock::has_secucode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryWarningResponse_Stock::set_has_secucode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryWarningResponse_Stock::clear_has_secucode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryWarningResponse_Stock::clear_secucode() {
  if (secucode_ != &::google::protobuf::internal::kEmptyString) {
    secucode_->clear();
  }
  clear_has_secucode();
}
inline const ::std::string& QueryWarningResponse_Stock::secucode() const {
  return *secucode_;
}
inline void QueryWarningResponse_Stock::set_secucode(const ::std::string& value) {
  set_has_secucode();
  if (secucode_ == &::google::protobuf::internal::kEmptyString) {
    secucode_ = new ::std::string;
  }
  secucode_->assign(value);
}
inline void QueryWarningResponse_Stock::set_secucode(const char* value) {
  set_has_secucode();
  if (secucode_ == &::google::protobuf::internal::kEmptyString) {
    secucode_ = new ::std::string;
  }
  secucode_->assign(value);
}
inline void QueryWarningResponse_Stock::set_secucode(const char* value, size_t size) {
  set_has_secucode();
  if (secucode_ == &::google::protobuf::internal::kEmptyString) {
    secucode_ = new ::std::string;
  }
  secucode_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* QueryWarningResponse_Stock::mutable_secucode() {
  set_has_secucode();
  if (secucode_ == &::google::protobuf::internal::kEmptyString) {
    secucode_ = new ::std::string;
  }
  return secucode_;
}
inline ::std::string* QueryWarningResponse_Stock::release_secucode() {
  clear_has_secucode();
  if (secucode_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = secucode_;
    secucode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required int32 exchange = 2;
inline bool QueryWarningResponse_Stock::has_exchange() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryWarningResponse_Stock::set_has_exchange() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryWarningResponse_Stock::clear_has_exchange() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryWarningResponse_Stock::clear_exchange() {
  exchange_ = 0;
  clear_has_exchange();
}
inline ::google::protobuf::int32 QueryWarningResponse_Stock::exchange() const {
  return exchange_;
}
inline void QueryWarningResponse_Stock::set_exchange(::google::protobuf::int32 value) {
  set_has_exchange();
  exchange_ = value;
}

// optional float pricehigh = 3;
inline bool QueryWarningResponse_Stock::has_pricehigh() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryWarningResponse_Stock::set_has_pricehigh() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryWarningResponse_Stock::clear_has_pricehigh() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryWarningResponse_Stock::clear_pricehigh() {
  pricehigh_ = 0;
  clear_has_pricehigh();
}
inline float QueryWarningResponse_Stock::pricehigh() const {
  return pricehigh_;
}
inline void QueryWarningResponse_Stock::set_pricehigh(float value) {
  set_has_pricehigh();
  pricehigh_ = value;
}

// optional float pricelow = 4;
inline bool QueryWarningResponse_Stock::has_pricelow() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QueryWarningResponse_Stock::set_has_pricelow() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QueryWarningResponse_Stock::clear_has_pricelow() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QueryWarningResponse_Stock::clear_pricelow() {
  pricelow_ = 0;
  clear_has_pricelow();
}
inline float QueryWarningResponse_Stock::pricelow() const {
  return pricelow_;
}
inline void QueryWarningResponse_Stock::set_pricelow(float value) {
  set_has_pricelow();
  pricelow_ = value;
}

// optional float rangeup = 5;
inline bool QueryWarningResponse_Stock::has_rangeup() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void QueryWarningResponse_Stock::set_has_rangeup() {
  _has_bits_[0] |= 0x00000010u;
}
inline void QueryWarningResponse_Stock::clear_has_rangeup() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void QueryWarningResponse_Stock::clear_rangeup() {
  rangeup_ = 0;
  clear_has_rangeup();
}
inline float QueryWarningResponse_Stock::rangeup() const {
  return rangeup_;
}
inline void QueryWarningResponse_Stock::set_rangeup(float value) {
  set_has_rangeup();
  rangeup_ = value;
}

// optional float rangedown = 6;
inline bool QueryWarningResponse_Stock::has_rangedown() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void QueryWarningResponse_Stock::set_has_rangedown() {
  _has_bits_[0] |= 0x00000020u;
}
inline void QueryWarningResponse_Stock::clear_has_rangedown() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void QueryWarningResponse_Stock::clear_rangedown() {
  rangedown_ = 0;
  clear_has_rangedown();
}
inline float QueryWarningResponse_Stock::rangedown() const {
  return rangedown_;
}
inline void QueryWarningResponse_Stock::set_rangedown(float value) {
  set_has_rangedown();
  rangedown_ = value;
}

// -------------------------------------------------------------------

// QueryWarningResponse

// repeated .quotewarning.QueryWarningResponse.Stock stock = 1;
inline int QueryWarningResponse::stock_size() const {
  return stock_.size();
}
inline void QueryWarningResponse::clear_stock() {
  stock_.Clear();
}
inline const ::quotewarning::QueryWarningResponse_Stock& QueryWarningResponse::stock(int index) const {
  return stock_.Get(index);
}
inline ::quotewarning::QueryWarningResponse_Stock* QueryWarningResponse::mutable_stock(int index) {
  return stock_.Mutable(index);
}
inline ::quotewarning::QueryWarningResponse_Stock* QueryWarningResponse::add_stock() {
  return stock_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::quotewarning::QueryWarningResponse_Stock >&
QueryWarningResponse::stock() const {
  return stock_;
}
inline ::google::protobuf::RepeatedPtrField< ::quotewarning::QueryWarningResponse_Stock >*
QueryWarningResponse::mutable_stock() {
  return &stock_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace quotewarning

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_quotewarning_2eproto__INCLUDED
