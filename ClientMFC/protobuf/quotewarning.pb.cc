// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "quotewarning.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace quotewarning {

namespace {

const ::google::protobuf::Descriptor* AddWarningRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AddWarningRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* AddWarningResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AddWarningResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateWarningRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateWarningRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateWarningResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateWarningResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* RemoveWarningRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RemoveWarningRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* RemoveWarningResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RemoveWarningResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryWarningRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryWarningRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryWarningResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryWarningResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryWarningResponse_Stock_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryWarningResponse_Stock_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_quotewarning_2eproto() {
  protobuf_AddDesc_quotewarning_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "quotewarning.proto");
  GOOGLE_CHECK(file != NULL);
  AddWarningRequest_descriptor_ = file->message_type(0);
  static const int AddWarningRequest_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddWarningRequest, custid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddWarningRequest, orgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddWarningRequest, secucode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddWarningRequest, exchange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddWarningRequest, pricehigh_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddWarningRequest, pricelow_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddWarningRequest, rangeup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddWarningRequest, rangedown_),
  };
  AddWarningRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AddWarningRequest_descriptor_,
      AddWarningRequest::default_instance_,
      AddWarningRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddWarningRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddWarningRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AddWarningRequest));
  AddWarningResponse_descriptor_ = file->message_type(1);
  static const int AddWarningResponse_offsets_[1] = {
  };
  AddWarningResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AddWarningResponse_descriptor_,
      AddWarningResponse::default_instance_,
      AddWarningResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddWarningResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddWarningResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AddWarningResponse));
  UpdateWarningRequest_descriptor_ = file->message_type(2);
  static const int UpdateWarningRequest_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateWarningRequest, custid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateWarningRequest, orgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateWarningRequest, secucode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateWarningRequest, exchange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateWarningRequest, pricehigh_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateWarningRequest, pricelow_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateWarningRequest, rangeup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateWarningRequest, rangedown_),
  };
  UpdateWarningRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpdateWarningRequest_descriptor_,
      UpdateWarningRequest::default_instance_,
      UpdateWarningRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateWarningRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateWarningRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpdateWarningRequest));
  UpdateWarningResponse_descriptor_ = file->message_type(3);
  static const int UpdateWarningResponse_offsets_[1] = {
  };
  UpdateWarningResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpdateWarningResponse_descriptor_,
      UpdateWarningResponse::default_instance_,
      UpdateWarningResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateWarningResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateWarningResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpdateWarningResponse));
  RemoveWarningRequest_descriptor_ = file->message_type(4);
  static const int RemoveWarningRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveWarningRequest, custid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveWarningRequest, orgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveWarningRequest, secucode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveWarningRequest, exchange_),
  };
  RemoveWarningRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RemoveWarningRequest_descriptor_,
      RemoveWarningRequest::default_instance_,
      RemoveWarningRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveWarningRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveWarningRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RemoveWarningRequest));
  RemoveWarningResponse_descriptor_ = file->message_type(5);
  static const int RemoveWarningResponse_offsets_[1] = {
  };
  RemoveWarningResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RemoveWarningResponse_descriptor_,
      RemoveWarningResponse::default_instance_,
      RemoveWarningResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveWarningResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveWarningResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RemoveWarningResponse));
  QueryWarningRequest_descriptor_ = file->message_type(6);
  static const int QueryWarningRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryWarningRequest, custid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryWarningRequest, orgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryWarningRequest, secucode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryWarningRequest, exchange_),
  };
  QueryWarningRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      QueryWarningRequest_descriptor_,
      QueryWarningRequest::default_instance_,
      QueryWarningRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryWarningRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryWarningRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(QueryWarningRequest));
  QueryWarningResponse_descriptor_ = file->message_type(7);
  static const int QueryWarningResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryWarningResponse, stock_),
  };
  QueryWarningResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      QueryWarningResponse_descriptor_,
      QueryWarningResponse::default_instance_,
      QueryWarningResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryWarningResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryWarningResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(QueryWarningResponse));
  QueryWarningResponse_Stock_descriptor_ = QueryWarningResponse_descriptor_->nested_type(0);
  static const int QueryWarningResponse_Stock_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryWarningResponse_Stock, secucode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryWarningResponse_Stock, exchange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryWarningResponse_Stock, pricehigh_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryWarningResponse_Stock, pricelow_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryWarningResponse_Stock, rangeup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryWarningResponse_Stock, rangedown_),
  };
  QueryWarningResponse_Stock_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      QueryWarningResponse_Stock_descriptor_,
      QueryWarningResponse_Stock::default_instance_,
      QueryWarningResponse_Stock_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryWarningResponse_Stock, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryWarningResponse_Stock, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(QueryWarningResponse_Stock));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_quotewarning_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AddWarningRequest_descriptor_, &AddWarningRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AddWarningResponse_descriptor_, &AddWarningResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpdateWarningRequest_descriptor_, &UpdateWarningRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpdateWarningResponse_descriptor_, &UpdateWarningResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RemoveWarningRequest_descriptor_, &RemoveWarningRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RemoveWarningResponse_descriptor_, &RemoveWarningResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    QueryWarningRequest_descriptor_, &QueryWarningRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    QueryWarningResponse_descriptor_, &QueryWarningResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    QueryWarningResponse_Stock_descriptor_, &QueryWarningResponse_Stock::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_quotewarning_2eproto() {
  delete AddWarningRequest::default_instance_;
  delete AddWarningRequest_reflection_;
  delete AddWarningResponse::default_instance_;
  delete AddWarningResponse_reflection_;
  delete UpdateWarningRequest::default_instance_;
  delete UpdateWarningRequest_reflection_;
  delete UpdateWarningResponse::default_instance_;
  delete UpdateWarningResponse_reflection_;
  delete RemoveWarningRequest::default_instance_;
  delete RemoveWarningRequest_reflection_;
  delete RemoveWarningResponse::default_instance_;
  delete RemoveWarningResponse_reflection_;
  delete QueryWarningRequest::default_instance_;
  delete QueryWarningRequest_reflection_;
  delete QueryWarningResponse::default_instance_;
  delete QueryWarningResponse_reflection_;
  delete QueryWarningResponse_Stock::default_instance_;
  delete QueryWarningResponse_Stock_reflection_;
}

void protobuf_AddDesc_quotewarning_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022quotewarning.proto\022\014quotewarning\"\237\001\n\021A"
    "ddWarningRequest\022\016\n\006custid\030\001 \002(\t\022\r\n\005orgi"
    "d\030\002 \001(\t\022\020\n\010secucode\030\003 \002(\t\022\020\n\010exchange\030\004 "
    "\002(\005\022\021\n\tpricehigh\030\005 \001(\002\022\020\n\010pricelow\030\006 \001(\002"
    "\022\017\n\007rangeup\030\007 \001(\002\022\021\n\trangedown\030\010 \001(\002\"\024\n\022"
    "AddWarningResponse\"\242\001\n\024UpdateWarningRequ"
    "est\022\016\n\006custid\030\001 \002(\t\022\r\n\005orgid\030\002 \001(\t\022\020\n\010se"
    "cucode\030\003 \002(\t\022\020\n\010exchange\030\004 \002(\005\022\021\n\tpriceh"
    "igh\030\005 \001(\002\022\020\n\010pricelow\030\006 \001(\002\022\017\n\007rangeup\030\007"
    " \001(\002\022\021\n\trangedown\030\010 \001(\002\"\027\n\025UpdateWarning"
    "Response\"Y\n\024RemoveWarningRequest\022\016\n\006cust"
    "id\030\001 \002(\t\022\r\n\005orgid\030\002 \001(\t\022\020\n\010secucode\030\003 \002("
    "\t\022\020\n\010exchange\030\004 \002(\005\"\027\n\025RemoveWarningResp"
    "onse\"X\n\023QueryWarningRequest\022\016\n\006custid\030\001 "
    "\002(\t\022\r\n\005orgid\030\002 \002(\t\022\020\n\010secucode\030\003 \001(\t\022\020\n\010"
    "exchange\030\004 \001(\005\"\305\001\n\024QueryWarningResponse\022"
    "7\n\005stock\030\001 \003(\0132(.quotewarning.QueryWarni"
    "ngResponse.Stock\032t\n\005Stock\022\020\n\010secucode\030\001 "
    "\002(\t\022\020\n\010exchange\030\002 \002(\005\022\021\n\tpricehigh\030\003 \001(\002"
    "\022\020\n\010pricelow\030\004 \001(\002\022\017\n\007rangeup\030\005 \001(\002\022\021\n\tr"
    "angedown\030\006 \001(\002", 814);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "quotewarning.proto", &protobuf_RegisterTypes);
  AddWarningRequest::default_instance_ = new AddWarningRequest();
  AddWarningResponse::default_instance_ = new AddWarningResponse();
  UpdateWarningRequest::default_instance_ = new UpdateWarningRequest();
  UpdateWarningResponse::default_instance_ = new UpdateWarningResponse();
  RemoveWarningRequest::default_instance_ = new RemoveWarningRequest();
  RemoveWarningResponse::default_instance_ = new RemoveWarningResponse();
  QueryWarningRequest::default_instance_ = new QueryWarningRequest();
  QueryWarningResponse::default_instance_ = new QueryWarningResponse();
  QueryWarningResponse_Stock::default_instance_ = new QueryWarningResponse_Stock();
  AddWarningRequest::default_instance_->InitAsDefaultInstance();
  AddWarningResponse::default_instance_->InitAsDefaultInstance();
  UpdateWarningRequest::default_instance_->InitAsDefaultInstance();
  UpdateWarningResponse::default_instance_->InitAsDefaultInstance();
  RemoveWarningRequest::default_instance_->InitAsDefaultInstance();
  RemoveWarningResponse::default_instance_->InitAsDefaultInstance();
  QueryWarningRequest::default_instance_->InitAsDefaultInstance();
  QueryWarningResponse::default_instance_->InitAsDefaultInstance();
  QueryWarningResponse_Stock::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_quotewarning_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_quotewarning_2eproto {
  StaticDescriptorInitializer_quotewarning_2eproto() {
    protobuf_AddDesc_quotewarning_2eproto();
  }
} static_descriptor_initializer_quotewarning_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int AddWarningRequest::kCustidFieldNumber;
const int AddWarningRequest::kOrgidFieldNumber;
const int AddWarningRequest::kSecucodeFieldNumber;
const int AddWarningRequest::kExchangeFieldNumber;
const int AddWarningRequest::kPricehighFieldNumber;
const int AddWarningRequest::kPricelowFieldNumber;
const int AddWarningRequest::kRangeupFieldNumber;
const int AddWarningRequest::kRangedownFieldNumber;
#endif  // !_MSC_VER

AddWarningRequest::AddWarningRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AddWarningRequest::InitAsDefaultInstance() {
}

AddWarningRequest::AddWarningRequest(const AddWarningRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AddWarningRequest::SharedCtor() {
  _cached_size_ = 0;
  custid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  orgid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  secucode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  exchange_ = 0;
  pricehigh_ = 0;
  pricelow_ = 0;
  rangeup_ = 0;
  rangedown_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AddWarningRequest::~AddWarningRequest() {
  SharedDtor();
}

void AddWarningRequest::SharedDtor() {
  if (custid_ != &::google::protobuf::internal::kEmptyString) {
    delete custid_;
  }
  if (orgid_ != &::google::protobuf::internal::kEmptyString) {
    delete orgid_;
  }
  if (secucode_ != &::google::protobuf::internal::kEmptyString) {
    delete secucode_;
  }
  if (this != default_instance_) {
  }
}

void AddWarningRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddWarningRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddWarningRequest_descriptor_;
}

const AddWarningRequest& AddWarningRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_quotewarning_2eproto();  return *default_instance_;
}

AddWarningRequest* AddWarningRequest::default_instance_ = NULL;

AddWarningRequest* AddWarningRequest::New() const {
  return new AddWarningRequest;
}

void AddWarningRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_custid()) {
      if (custid_ != &::google::protobuf::internal::kEmptyString) {
        custid_->clear();
      }
    }
    if (has_orgid()) {
      if (orgid_ != &::google::protobuf::internal::kEmptyString) {
        orgid_->clear();
      }
    }
    if (has_secucode()) {
      if (secucode_ != &::google::protobuf::internal::kEmptyString) {
        secucode_->clear();
      }
    }
    exchange_ = 0;
    pricehigh_ = 0;
    pricelow_ = 0;
    rangeup_ = 0;
    rangedown_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AddWarningRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string custid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_custid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->custid().data(), this->custid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_orgid;
        break;
      }
      
      // optional string orgid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_orgid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_orgid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->orgid().data(), this->orgid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_secucode;
        break;
      }
      
      // required string secucode = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_secucode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_secucode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->secucode().data(), this->secucode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_exchange;
        break;
      }
      
      // required int32 exchange = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exchange:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exchange_)));
          set_has_exchange();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(45)) goto parse_pricehigh;
        break;
      }
      
      // optional float pricehigh = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_pricehigh:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pricehigh_)));
          set_has_pricehigh();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(53)) goto parse_pricelow;
        break;
      }
      
      // optional float pricelow = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_pricelow:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pricelow_)));
          set_has_pricelow();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(61)) goto parse_rangeup;
        break;
      }
      
      // optional float rangeup = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_rangeup:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rangeup_)));
          set_has_rangeup();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(69)) goto parse_rangedown;
        break;
      }
      
      // optional float rangedown = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_rangedown:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rangedown_)));
          set_has_rangedown();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AddWarningRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string custid = 1;
  if (has_custid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->custid().data(), this->custid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->custid(), output);
  }
  
  // optional string orgid = 2;
  if (has_orgid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->orgid().data(), this->orgid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->orgid(), output);
  }
  
  // required string secucode = 3;
  if (has_secucode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->secucode().data(), this->secucode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->secucode(), output);
  }
  
  // required int32 exchange = 4;
  if (has_exchange()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->exchange(), output);
  }
  
  // optional float pricehigh = 5;
  if (has_pricehigh()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->pricehigh(), output);
  }
  
  // optional float pricelow = 6;
  if (has_pricelow()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->pricelow(), output);
  }
  
  // optional float rangeup = 7;
  if (has_rangeup()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->rangeup(), output);
  }
  
  // optional float rangedown = 8;
  if (has_rangedown()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->rangedown(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AddWarningRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string custid = 1;
  if (has_custid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->custid().data(), this->custid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->custid(), target);
  }
  
  // optional string orgid = 2;
  if (has_orgid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->orgid().data(), this->orgid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->orgid(), target);
  }
  
  // required string secucode = 3;
  if (has_secucode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->secucode().data(), this->secucode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->secucode(), target);
  }
  
  // required int32 exchange = 4;
  if (has_exchange()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->exchange(), target);
  }
  
  // optional float pricehigh = 5;
  if (has_pricehigh()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->pricehigh(), target);
  }
  
  // optional float pricelow = 6;
  if (has_pricelow()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->pricelow(), target);
  }
  
  // optional float rangeup = 7;
  if (has_rangeup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->rangeup(), target);
  }
  
  // optional float rangedown = 8;
  if (has_rangedown()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->rangedown(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AddWarningRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string custid = 1;
    if (has_custid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->custid());
    }
    
    // optional string orgid = 2;
    if (has_orgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->orgid());
    }
    
    // required string secucode = 3;
    if (has_secucode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->secucode());
    }
    
    // required int32 exchange = 4;
    if (has_exchange()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exchange());
    }
    
    // optional float pricehigh = 5;
    if (has_pricehigh()) {
      total_size += 1 + 4;
    }
    
    // optional float pricelow = 6;
    if (has_pricelow()) {
      total_size += 1 + 4;
    }
    
    // optional float rangeup = 7;
    if (has_rangeup()) {
      total_size += 1 + 4;
    }
    
    // optional float rangedown = 8;
    if (has_rangedown()) {
      total_size += 1 + 4;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddWarningRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AddWarningRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AddWarningRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AddWarningRequest::MergeFrom(const AddWarningRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_custid()) {
      set_custid(from.custid());
    }
    if (from.has_orgid()) {
      set_orgid(from.orgid());
    }
    if (from.has_secucode()) {
      set_secucode(from.secucode());
    }
    if (from.has_exchange()) {
      set_exchange(from.exchange());
    }
    if (from.has_pricehigh()) {
      set_pricehigh(from.pricehigh());
    }
    if (from.has_pricelow()) {
      set_pricelow(from.pricelow());
    }
    if (from.has_rangeup()) {
      set_rangeup(from.rangeup());
    }
    if (from.has_rangedown()) {
      set_rangedown(from.rangedown());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AddWarningRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddWarningRequest::CopyFrom(const AddWarningRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddWarningRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000d) != 0x0000000d) return false;
  
  return true;
}

void AddWarningRequest::Swap(AddWarningRequest* other) {
  if (other != this) {
    std::swap(custid_, other->custid_);
    std::swap(orgid_, other->orgid_);
    std::swap(secucode_, other->secucode_);
    std::swap(exchange_, other->exchange_);
    std::swap(pricehigh_, other->pricehigh_);
    std::swap(pricelow_, other->pricelow_);
    std::swap(rangeup_, other->rangeup_);
    std::swap(rangedown_, other->rangedown_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AddWarningRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AddWarningRequest_descriptor_;
  metadata.reflection = AddWarningRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

AddWarningResponse::AddWarningResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AddWarningResponse::InitAsDefaultInstance() {
}

AddWarningResponse::AddWarningResponse(const AddWarningResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AddWarningResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AddWarningResponse::~AddWarningResponse() {
  SharedDtor();
}

void AddWarningResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AddWarningResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddWarningResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddWarningResponse_descriptor_;
}

const AddWarningResponse& AddWarningResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_quotewarning_2eproto();  return *default_instance_;
}

AddWarningResponse* AddWarningResponse::default_instance_ = NULL;

AddWarningResponse* AddWarningResponse::New() const {
  return new AddWarningResponse;
}

void AddWarningResponse::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AddWarningResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void AddWarningResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AddWarningResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AddWarningResponse::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddWarningResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AddWarningResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AddWarningResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AddWarningResponse::MergeFrom(const AddWarningResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AddWarningResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddWarningResponse::CopyFrom(const AddWarningResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddWarningResponse::IsInitialized() const {
  
  return true;
}

void AddWarningResponse::Swap(AddWarningResponse* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AddWarningResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AddWarningResponse_descriptor_;
  metadata.reflection = AddWarningResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UpdateWarningRequest::kCustidFieldNumber;
const int UpdateWarningRequest::kOrgidFieldNumber;
const int UpdateWarningRequest::kSecucodeFieldNumber;
const int UpdateWarningRequest::kExchangeFieldNumber;
const int UpdateWarningRequest::kPricehighFieldNumber;
const int UpdateWarningRequest::kPricelowFieldNumber;
const int UpdateWarningRequest::kRangeupFieldNumber;
const int UpdateWarningRequest::kRangedownFieldNumber;
#endif  // !_MSC_VER

UpdateWarningRequest::UpdateWarningRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void UpdateWarningRequest::InitAsDefaultInstance() {
}

UpdateWarningRequest::UpdateWarningRequest(const UpdateWarningRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void UpdateWarningRequest::SharedCtor() {
  _cached_size_ = 0;
  custid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  orgid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  secucode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  exchange_ = 0;
  pricehigh_ = 0;
  pricelow_ = 0;
  rangeup_ = 0;
  rangedown_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateWarningRequest::~UpdateWarningRequest() {
  SharedDtor();
}

void UpdateWarningRequest::SharedDtor() {
  if (custid_ != &::google::protobuf::internal::kEmptyString) {
    delete custid_;
  }
  if (orgid_ != &::google::protobuf::internal::kEmptyString) {
    delete orgid_;
  }
  if (secucode_ != &::google::protobuf::internal::kEmptyString) {
    delete secucode_;
  }
  if (this != default_instance_) {
  }
}

void UpdateWarningRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateWarningRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateWarningRequest_descriptor_;
}

const UpdateWarningRequest& UpdateWarningRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_quotewarning_2eproto();  return *default_instance_;
}

UpdateWarningRequest* UpdateWarningRequest::default_instance_ = NULL;

UpdateWarningRequest* UpdateWarningRequest::New() const {
  return new UpdateWarningRequest;
}

void UpdateWarningRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_custid()) {
      if (custid_ != &::google::protobuf::internal::kEmptyString) {
        custid_->clear();
      }
    }
    if (has_orgid()) {
      if (orgid_ != &::google::protobuf::internal::kEmptyString) {
        orgid_->clear();
      }
    }
    if (has_secucode()) {
      if (secucode_ != &::google::protobuf::internal::kEmptyString) {
        secucode_->clear();
      }
    }
    exchange_ = 0;
    pricehigh_ = 0;
    pricelow_ = 0;
    rangeup_ = 0;
    rangedown_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UpdateWarningRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string custid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_custid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->custid().data(), this->custid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_orgid;
        break;
      }
      
      // optional string orgid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_orgid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_orgid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->orgid().data(), this->orgid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_secucode;
        break;
      }
      
      // required string secucode = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_secucode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_secucode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->secucode().data(), this->secucode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_exchange;
        break;
      }
      
      // required int32 exchange = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exchange:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exchange_)));
          set_has_exchange();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(45)) goto parse_pricehigh;
        break;
      }
      
      // optional float pricehigh = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_pricehigh:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pricehigh_)));
          set_has_pricehigh();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(53)) goto parse_pricelow;
        break;
      }
      
      // optional float pricelow = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_pricelow:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pricelow_)));
          set_has_pricelow();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(61)) goto parse_rangeup;
        break;
      }
      
      // optional float rangeup = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_rangeup:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rangeup_)));
          set_has_rangeup();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(69)) goto parse_rangedown;
        break;
      }
      
      // optional float rangedown = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_rangedown:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rangedown_)));
          set_has_rangedown();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void UpdateWarningRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string custid = 1;
  if (has_custid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->custid().data(), this->custid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->custid(), output);
  }
  
  // optional string orgid = 2;
  if (has_orgid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->orgid().data(), this->orgid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->orgid(), output);
  }
  
  // required string secucode = 3;
  if (has_secucode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->secucode().data(), this->secucode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->secucode(), output);
  }
  
  // required int32 exchange = 4;
  if (has_exchange()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->exchange(), output);
  }
  
  // optional float pricehigh = 5;
  if (has_pricehigh()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->pricehigh(), output);
  }
  
  // optional float pricelow = 6;
  if (has_pricelow()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->pricelow(), output);
  }
  
  // optional float rangeup = 7;
  if (has_rangeup()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->rangeup(), output);
  }
  
  // optional float rangedown = 8;
  if (has_rangedown()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->rangedown(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* UpdateWarningRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string custid = 1;
  if (has_custid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->custid().data(), this->custid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->custid(), target);
  }
  
  // optional string orgid = 2;
  if (has_orgid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->orgid().data(), this->orgid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->orgid(), target);
  }
  
  // required string secucode = 3;
  if (has_secucode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->secucode().data(), this->secucode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->secucode(), target);
  }
  
  // required int32 exchange = 4;
  if (has_exchange()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->exchange(), target);
  }
  
  // optional float pricehigh = 5;
  if (has_pricehigh()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->pricehigh(), target);
  }
  
  // optional float pricelow = 6;
  if (has_pricelow()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->pricelow(), target);
  }
  
  // optional float rangeup = 7;
  if (has_rangeup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->rangeup(), target);
  }
  
  // optional float rangedown = 8;
  if (has_rangedown()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->rangedown(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int UpdateWarningRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string custid = 1;
    if (has_custid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->custid());
    }
    
    // optional string orgid = 2;
    if (has_orgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->orgid());
    }
    
    // required string secucode = 3;
    if (has_secucode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->secucode());
    }
    
    // required int32 exchange = 4;
    if (has_exchange()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exchange());
    }
    
    // optional float pricehigh = 5;
    if (has_pricehigh()) {
      total_size += 1 + 4;
    }
    
    // optional float pricelow = 6;
    if (has_pricelow()) {
      total_size += 1 + 4;
    }
    
    // optional float rangeup = 7;
    if (has_rangeup()) {
      total_size += 1 + 4;
    }
    
    // optional float rangedown = 8;
    if (has_rangedown()) {
      total_size += 1 + 4;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateWarningRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UpdateWarningRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpdateWarningRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpdateWarningRequest::MergeFrom(const UpdateWarningRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_custid()) {
      set_custid(from.custid());
    }
    if (from.has_orgid()) {
      set_orgid(from.orgid());
    }
    if (from.has_secucode()) {
      set_secucode(from.secucode());
    }
    if (from.has_exchange()) {
      set_exchange(from.exchange());
    }
    if (from.has_pricehigh()) {
      set_pricehigh(from.pricehigh());
    }
    if (from.has_pricelow()) {
      set_pricelow(from.pricelow());
    }
    if (from.has_rangeup()) {
      set_rangeup(from.rangeup());
    }
    if (from.has_rangedown()) {
      set_rangedown(from.rangedown());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UpdateWarningRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateWarningRequest::CopyFrom(const UpdateWarningRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateWarningRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000d) != 0x0000000d) return false;
  
  return true;
}

void UpdateWarningRequest::Swap(UpdateWarningRequest* other) {
  if (other != this) {
    std::swap(custid_, other->custid_);
    std::swap(orgid_, other->orgid_);
    std::swap(secucode_, other->secucode_);
    std::swap(exchange_, other->exchange_);
    std::swap(pricehigh_, other->pricehigh_);
    std::swap(pricelow_, other->pricelow_);
    std::swap(rangeup_, other->rangeup_);
    std::swap(rangedown_, other->rangedown_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UpdateWarningRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateWarningRequest_descriptor_;
  metadata.reflection = UpdateWarningRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

UpdateWarningResponse::UpdateWarningResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void UpdateWarningResponse::InitAsDefaultInstance() {
}

UpdateWarningResponse::UpdateWarningResponse(const UpdateWarningResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void UpdateWarningResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateWarningResponse::~UpdateWarningResponse() {
  SharedDtor();
}

void UpdateWarningResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UpdateWarningResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateWarningResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateWarningResponse_descriptor_;
}

const UpdateWarningResponse& UpdateWarningResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_quotewarning_2eproto();  return *default_instance_;
}

UpdateWarningResponse* UpdateWarningResponse::default_instance_ = NULL;

UpdateWarningResponse* UpdateWarningResponse::New() const {
  return new UpdateWarningResponse;
}

void UpdateWarningResponse::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UpdateWarningResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void UpdateWarningResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* UpdateWarningResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int UpdateWarningResponse::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateWarningResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UpdateWarningResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpdateWarningResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpdateWarningResponse::MergeFrom(const UpdateWarningResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UpdateWarningResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateWarningResponse::CopyFrom(const UpdateWarningResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateWarningResponse::IsInitialized() const {
  
  return true;
}

void UpdateWarningResponse::Swap(UpdateWarningResponse* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UpdateWarningResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateWarningResponse_descriptor_;
  metadata.reflection = UpdateWarningResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RemoveWarningRequest::kCustidFieldNumber;
const int RemoveWarningRequest::kOrgidFieldNumber;
const int RemoveWarningRequest::kSecucodeFieldNumber;
const int RemoveWarningRequest::kExchangeFieldNumber;
#endif  // !_MSC_VER

RemoveWarningRequest::RemoveWarningRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RemoveWarningRequest::InitAsDefaultInstance() {
}

RemoveWarningRequest::RemoveWarningRequest(const RemoveWarningRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RemoveWarningRequest::SharedCtor() {
  _cached_size_ = 0;
  custid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  orgid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  secucode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  exchange_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RemoveWarningRequest::~RemoveWarningRequest() {
  SharedDtor();
}

void RemoveWarningRequest::SharedDtor() {
  if (custid_ != &::google::protobuf::internal::kEmptyString) {
    delete custid_;
  }
  if (orgid_ != &::google::protobuf::internal::kEmptyString) {
    delete orgid_;
  }
  if (secucode_ != &::google::protobuf::internal::kEmptyString) {
    delete secucode_;
  }
  if (this != default_instance_) {
  }
}

void RemoveWarningRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveWarningRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RemoveWarningRequest_descriptor_;
}

const RemoveWarningRequest& RemoveWarningRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_quotewarning_2eproto();  return *default_instance_;
}

RemoveWarningRequest* RemoveWarningRequest::default_instance_ = NULL;

RemoveWarningRequest* RemoveWarningRequest::New() const {
  return new RemoveWarningRequest;
}

void RemoveWarningRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_custid()) {
      if (custid_ != &::google::protobuf::internal::kEmptyString) {
        custid_->clear();
      }
    }
    if (has_orgid()) {
      if (orgid_ != &::google::protobuf::internal::kEmptyString) {
        orgid_->clear();
      }
    }
    if (has_secucode()) {
      if (secucode_ != &::google::protobuf::internal::kEmptyString) {
        secucode_->clear();
      }
    }
    exchange_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RemoveWarningRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string custid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_custid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->custid().data(), this->custid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_orgid;
        break;
      }
      
      // optional string orgid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_orgid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_orgid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->orgid().data(), this->orgid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_secucode;
        break;
      }
      
      // required string secucode = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_secucode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_secucode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->secucode().data(), this->secucode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_exchange;
        break;
      }
      
      // required int32 exchange = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exchange:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exchange_)));
          set_has_exchange();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RemoveWarningRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string custid = 1;
  if (has_custid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->custid().data(), this->custid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->custid(), output);
  }
  
  // optional string orgid = 2;
  if (has_orgid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->orgid().data(), this->orgid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->orgid(), output);
  }
  
  // required string secucode = 3;
  if (has_secucode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->secucode().data(), this->secucode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->secucode(), output);
  }
  
  // required int32 exchange = 4;
  if (has_exchange()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->exchange(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RemoveWarningRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string custid = 1;
  if (has_custid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->custid().data(), this->custid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->custid(), target);
  }
  
  // optional string orgid = 2;
  if (has_orgid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->orgid().data(), this->orgid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->orgid(), target);
  }
  
  // required string secucode = 3;
  if (has_secucode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->secucode().data(), this->secucode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->secucode(), target);
  }
  
  // required int32 exchange = 4;
  if (has_exchange()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->exchange(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RemoveWarningRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string custid = 1;
    if (has_custid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->custid());
    }
    
    // optional string orgid = 2;
    if (has_orgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->orgid());
    }
    
    // required string secucode = 3;
    if (has_secucode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->secucode());
    }
    
    // required int32 exchange = 4;
    if (has_exchange()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exchange());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoveWarningRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RemoveWarningRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RemoveWarningRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RemoveWarningRequest::MergeFrom(const RemoveWarningRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_custid()) {
      set_custid(from.custid());
    }
    if (from.has_orgid()) {
      set_orgid(from.orgid());
    }
    if (from.has_secucode()) {
      set_secucode(from.secucode());
    }
    if (from.has_exchange()) {
      set_exchange(from.exchange());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RemoveWarningRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveWarningRequest::CopyFrom(const RemoveWarningRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveWarningRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000d) != 0x0000000d) return false;
  
  return true;
}

void RemoveWarningRequest::Swap(RemoveWarningRequest* other) {
  if (other != this) {
    std::swap(custid_, other->custid_);
    std::swap(orgid_, other->orgid_);
    std::swap(secucode_, other->secucode_);
    std::swap(exchange_, other->exchange_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RemoveWarningRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RemoveWarningRequest_descriptor_;
  metadata.reflection = RemoveWarningRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

RemoveWarningResponse::RemoveWarningResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RemoveWarningResponse::InitAsDefaultInstance() {
}

RemoveWarningResponse::RemoveWarningResponse(const RemoveWarningResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RemoveWarningResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RemoveWarningResponse::~RemoveWarningResponse() {
  SharedDtor();
}

void RemoveWarningResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RemoveWarningResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveWarningResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RemoveWarningResponse_descriptor_;
}

const RemoveWarningResponse& RemoveWarningResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_quotewarning_2eproto();  return *default_instance_;
}

RemoveWarningResponse* RemoveWarningResponse::default_instance_ = NULL;

RemoveWarningResponse* RemoveWarningResponse::New() const {
  return new RemoveWarningResponse;
}

void RemoveWarningResponse::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RemoveWarningResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void RemoveWarningResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RemoveWarningResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RemoveWarningResponse::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoveWarningResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RemoveWarningResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RemoveWarningResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RemoveWarningResponse::MergeFrom(const RemoveWarningResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RemoveWarningResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveWarningResponse::CopyFrom(const RemoveWarningResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveWarningResponse::IsInitialized() const {
  
  return true;
}

void RemoveWarningResponse::Swap(RemoveWarningResponse* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RemoveWarningResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RemoveWarningResponse_descriptor_;
  metadata.reflection = RemoveWarningResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int QueryWarningRequest::kCustidFieldNumber;
const int QueryWarningRequest::kOrgidFieldNumber;
const int QueryWarningRequest::kSecucodeFieldNumber;
const int QueryWarningRequest::kExchangeFieldNumber;
#endif  // !_MSC_VER

QueryWarningRequest::QueryWarningRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void QueryWarningRequest::InitAsDefaultInstance() {
}

QueryWarningRequest::QueryWarningRequest(const QueryWarningRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void QueryWarningRequest::SharedCtor() {
  _cached_size_ = 0;
  custid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  orgid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  secucode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  exchange_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QueryWarningRequest::~QueryWarningRequest() {
  SharedDtor();
}

void QueryWarningRequest::SharedDtor() {
  if (custid_ != &::google::protobuf::internal::kEmptyString) {
    delete custid_;
  }
  if (orgid_ != &::google::protobuf::internal::kEmptyString) {
    delete orgid_;
  }
  if (secucode_ != &::google::protobuf::internal::kEmptyString) {
    delete secucode_;
  }
  if (this != default_instance_) {
  }
}

void QueryWarningRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryWarningRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryWarningRequest_descriptor_;
}

const QueryWarningRequest& QueryWarningRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_quotewarning_2eproto();  return *default_instance_;
}

QueryWarningRequest* QueryWarningRequest::default_instance_ = NULL;

QueryWarningRequest* QueryWarningRequest::New() const {
  return new QueryWarningRequest;
}

void QueryWarningRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_custid()) {
      if (custid_ != &::google::protobuf::internal::kEmptyString) {
        custid_->clear();
      }
    }
    if (has_orgid()) {
      if (orgid_ != &::google::protobuf::internal::kEmptyString) {
        orgid_->clear();
      }
    }
    if (has_secucode()) {
      if (secucode_ != &::google::protobuf::internal::kEmptyString) {
        secucode_->clear();
      }
    }
    exchange_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool QueryWarningRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string custid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_custid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->custid().data(), this->custid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_orgid;
        break;
      }
      
      // required string orgid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_orgid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_orgid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->orgid().data(), this->orgid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_secucode;
        break;
      }
      
      // optional string secucode = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_secucode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_secucode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->secucode().data(), this->secucode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_exchange;
        break;
      }
      
      // optional int32 exchange = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exchange:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exchange_)));
          set_has_exchange();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void QueryWarningRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string custid = 1;
  if (has_custid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->custid().data(), this->custid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->custid(), output);
  }
  
  // required string orgid = 2;
  if (has_orgid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->orgid().data(), this->orgid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->orgid(), output);
  }
  
  // optional string secucode = 3;
  if (has_secucode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->secucode().data(), this->secucode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->secucode(), output);
  }
  
  // optional int32 exchange = 4;
  if (has_exchange()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->exchange(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* QueryWarningRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string custid = 1;
  if (has_custid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->custid().data(), this->custid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->custid(), target);
  }
  
  // required string orgid = 2;
  if (has_orgid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->orgid().data(), this->orgid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->orgid(), target);
  }
  
  // optional string secucode = 3;
  if (has_secucode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->secucode().data(), this->secucode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->secucode(), target);
  }
  
  // optional int32 exchange = 4;
  if (has_exchange()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->exchange(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int QueryWarningRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string custid = 1;
    if (has_custid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->custid());
    }
    
    // required string orgid = 2;
    if (has_orgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->orgid());
    }
    
    // optional string secucode = 3;
    if (has_secucode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->secucode());
    }
    
    // optional int32 exchange = 4;
    if (has_exchange()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exchange());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryWarningRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const QueryWarningRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const QueryWarningRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QueryWarningRequest::MergeFrom(const QueryWarningRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_custid()) {
      set_custid(from.custid());
    }
    if (from.has_orgid()) {
      set_orgid(from.orgid());
    }
    if (from.has_secucode()) {
      set_secucode(from.secucode());
    }
    if (from.has_exchange()) {
      set_exchange(from.exchange());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void QueryWarningRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryWarningRequest::CopyFrom(const QueryWarningRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryWarningRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void QueryWarningRequest::Swap(QueryWarningRequest* other) {
  if (other != this) {
    std::swap(custid_, other->custid_);
    std::swap(orgid_, other->orgid_);
    std::swap(secucode_, other->secucode_);
    std::swap(exchange_, other->exchange_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata QueryWarningRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryWarningRequest_descriptor_;
  metadata.reflection = QueryWarningRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int QueryWarningResponse_Stock::kSecucodeFieldNumber;
const int QueryWarningResponse_Stock::kExchangeFieldNumber;
const int QueryWarningResponse_Stock::kPricehighFieldNumber;
const int QueryWarningResponse_Stock::kPricelowFieldNumber;
const int QueryWarningResponse_Stock::kRangeupFieldNumber;
const int QueryWarningResponse_Stock::kRangedownFieldNumber;
#endif  // !_MSC_VER

QueryWarningResponse_Stock::QueryWarningResponse_Stock()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void QueryWarningResponse_Stock::InitAsDefaultInstance() {
}

QueryWarningResponse_Stock::QueryWarningResponse_Stock(const QueryWarningResponse_Stock& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void QueryWarningResponse_Stock::SharedCtor() {
  _cached_size_ = 0;
  secucode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  exchange_ = 0;
  pricehigh_ = 0;
  pricelow_ = 0;
  rangeup_ = 0;
  rangedown_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QueryWarningResponse_Stock::~QueryWarningResponse_Stock() {
  SharedDtor();
}

void QueryWarningResponse_Stock::SharedDtor() {
  if (secucode_ != &::google::protobuf::internal::kEmptyString) {
    delete secucode_;
  }
  if (this != default_instance_) {
  }
}

void QueryWarningResponse_Stock::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryWarningResponse_Stock::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryWarningResponse_Stock_descriptor_;
}

const QueryWarningResponse_Stock& QueryWarningResponse_Stock::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_quotewarning_2eproto();  return *default_instance_;
}

QueryWarningResponse_Stock* QueryWarningResponse_Stock::default_instance_ = NULL;

QueryWarningResponse_Stock* QueryWarningResponse_Stock::New() const {
  return new QueryWarningResponse_Stock;
}

void QueryWarningResponse_Stock::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_secucode()) {
      if (secucode_ != &::google::protobuf::internal::kEmptyString) {
        secucode_->clear();
      }
    }
    exchange_ = 0;
    pricehigh_ = 0;
    pricelow_ = 0;
    rangeup_ = 0;
    rangedown_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool QueryWarningResponse_Stock::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string secucode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_secucode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->secucode().data(), this->secucode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_exchange;
        break;
      }
      
      // required int32 exchange = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exchange:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exchange_)));
          set_has_exchange();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(29)) goto parse_pricehigh;
        break;
      }
      
      // optional float pricehigh = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_pricehigh:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pricehigh_)));
          set_has_pricehigh();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(37)) goto parse_pricelow;
        break;
      }
      
      // optional float pricelow = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_pricelow:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pricelow_)));
          set_has_pricelow();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(45)) goto parse_rangeup;
        break;
      }
      
      // optional float rangeup = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_rangeup:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rangeup_)));
          set_has_rangeup();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(53)) goto parse_rangedown;
        break;
      }
      
      // optional float rangedown = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_rangedown:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rangedown_)));
          set_has_rangedown();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void QueryWarningResponse_Stock::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string secucode = 1;
  if (has_secucode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->secucode().data(), this->secucode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->secucode(), output);
  }
  
  // required int32 exchange = 2;
  if (has_exchange()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->exchange(), output);
  }
  
  // optional float pricehigh = 3;
  if (has_pricehigh()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->pricehigh(), output);
  }
  
  // optional float pricelow = 4;
  if (has_pricelow()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->pricelow(), output);
  }
  
  // optional float rangeup = 5;
  if (has_rangeup()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->rangeup(), output);
  }
  
  // optional float rangedown = 6;
  if (has_rangedown()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->rangedown(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* QueryWarningResponse_Stock::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string secucode = 1;
  if (has_secucode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->secucode().data(), this->secucode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->secucode(), target);
  }
  
  // required int32 exchange = 2;
  if (has_exchange()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->exchange(), target);
  }
  
  // optional float pricehigh = 3;
  if (has_pricehigh()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->pricehigh(), target);
  }
  
  // optional float pricelow = 4;
  if (has_pricelow()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->pricelow(), target);
  }
  
  // optional float rangeup = 5;
  if (has_rangeup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->rangeup(), target);
  }
  
  // optional float rangedown = 6;
  if (has_rangedown()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->rangedown(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int QueryWarningResponse_Stock::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string secucode = 1;
    if (has_secucode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->secucode());
    }
    
    // required int32 exchange = 2;
    if (has_exchange()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exchange());
    }
    
    // optional float pricehigh = 3;
    if (has_pricehigh()) {
      total_size += 1 + 4;
    }
    
    // optional float pricelow = 4;
    if (has_pricelow()) {
      total_size += 1 + 4;
    }
    
    // optional float rangeup = 5;
    if (has_rangeup()) {
      total_size += 1 + 4;
    }
    
    // optional float rangedown = 6;
    if (has_rangedown()) {
      total_size += 1 + 4;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryWarningResponse_Stock::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const QueryWarningResponse_Stock* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const QueryWarningResponse_Stock*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QueryWarningResponse_Stock::MergeFrom(const QueryWarningResponse_Stock& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_secucode()) {
      set_secucode(from.secucode());
    }
    if (from.has_exchange()) {
      set_exchange(from.exchange());
    }
    if (from.has_pricehigh()) {
      set_pricehigh(from.pricehigh());
    }
    if (from.has_pricelow()) {
      set_pricelow(from.pricelow());
    }
    if (from.has_rangeup()) {
      set_rangeup(from.rangeup());
    }
    if (from.has_rangedown()) {
      set_rangedown(from.rangedown());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void QueryWarningResponse_Stock::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryWarningResponse_Stock::CopyFrom(const QueryWarningResponse_Stock& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryWarningResponse_Stock::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void QueryWarningResponse_Stock::Swap(QueryWarningResponse_Stock* other) {
  if (other != this) {
    std::swap(secucode_, other->secucode_);
    std::swap(exchange_, other->exchange_);
    std::swap(pricehigh_, other->pricehigh_);
    std::swap(pricelow_, other->pricelow_);
    std::swap(rangeup_, other->rangeup_);
    std::swap(rangedown_, other->rangedown_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata QueryWarningResponse_Stock::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryWarningResponse_Stock_descriptor_;
  metadata.reflection = QueryWarningResponse_Stock_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int QueryWarningResponse::kStockFieldNumber;
#endif  // !_MSC_VER

QueryWarningResponse::QueryWarningResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void QueryWarningResponse::InitAsDefaultInstance() {
}

QueryWarningResponse::QueryWarningResponse(const QueryWarningResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void QueryWarningResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QueryWarningResponse::~QueryWarningResponse() {
  SharedDtor();
}

void QueryWarningResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QueryWarningResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryWarningResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryWarningResponse_descriptor_;
}

const QueryWarningResponse& QueryWarningResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_quotewarning_2eproto();  return *default_instance_;
}

QueryWarningResponse* QueryWarningResponse::default_instance_ = NULL;

QueryWarningResponse* QueryWarningResponse::New() const {
  return new QueryWarningResponse;
}

void QueryWarningResponse::Clear() {
  stock_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool QueryWarningResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .quotewarning.QueryWarningResponse.Stock stock = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_stock:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_stock()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_stock;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void QueryWarningResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .quotewarning.QueryWarningResponse.Stock stock = 1;
  for (int i = 0; i < this->stock_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->stock(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* QueryWarningResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .quotewarning.QueryWarningResponse.Stock stock = 1;
  for (int i = 0; i < this->stock_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->stock(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int QueryWarningResponse::ByteSize() const {
  int total_size = 0;
  
  // repeated .quotewarning.QueryWarningResponse.Stock stock = 1;
  total_size += 1 * this->stock_size();
  for (int i = 0; i < this->stock_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->stock(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryWarningResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const QueryWarningResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const QueryWarningResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QueryWarningResponse::MergeFrom(const QueryWarningResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  stock_.MergeFrom(from.stock_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void QueryWarningResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryWarningResponse::CopyFrom(const QueryWarningResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryWarningResponse::IsInitialized() const {
  
  for (int i = 0; i < stock_size(); i++) {
    if (!this->stock(i).IsInitialized()) return false;
  }
  return true;
}

void QueryWarningResponse::Swap(QueryWarningResponse* other) {
  if (other != this) {
    stock_.Swap(&other->stock_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata QueryWarningResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryWarningResponse_descriptor_;
  metadata.reflection = QueryWarningResponse_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace quotewarning

// @@protoc_insertion_point(global_scope)
