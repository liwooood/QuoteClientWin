// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "file.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace quote {

namespace {

const ::google::protobuf::Descriptor* FileStock_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileStock_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileStock_StockDetail_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileStock_StockDetail_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileFinance_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileFinance_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileFinance_FinanceDetail_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileFinance_FinanceDetail_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileFinanceFund_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileFinanceFund_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileFinanceFund_FinanceFundDetail_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileFinanceFund_FinanceFundDetail_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileZsbx_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileZsbx_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileZsbx_ZsbxDetail_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileZsbx_ZsbxDetail_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileBlock_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileBlock_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileBlock_Block_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileBlock_Block_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileBlock_Block_BlockDetail_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileBlock_Block_BlockDetail_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* FileBlock_Block_Name_descriptor_ = NULL;
const ::google::protobuf::Descriptor* FileBlockStock_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileBlockStock_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileBlockStock_BlockStock_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileBlockStock_BlockStock_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileBlockStock_BlockStock_BlockStockDetail_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileBlockStock_BlockStock_BlockStockDetail_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileMd5_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileMd5_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileMd5_Md5_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileMd5_Md5_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* FileMd5_Md5_FileName_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_file_2eproto() {
  protobuf_AddDesc_file_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "file.proto");
  GOOGLE_CHECK(file != NULL);
  FileStock_descriptor_ = file->message_type(0);
  static const int FileStock_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileStock, stockdetail_),
  };
  FileStock_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileStock_descriptor_,
      FileStock::default_instance_,
      FileStock_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileStock, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileStock, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileStock));
  FileStock_StockDetail_descriptor_ = FileStock_descriptor_->nested_type(0);
  static const int FileStock_StockDetail_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileStock_StockDetail, secucode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileStock_StockDetail, secuname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileStock_StockDetail, secupy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileStock_StockDetail, secutype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileStock_StockDetail, coefficient_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileStock_StockDetail, preclose_),
  };
  FileStock_StockDetail_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileStock_StockDetail_descriptor_,
      FileStock_StockDetail::default_instance_,
      FileStock_StockDetail_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileStock_StockDetail, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileStock_StockDetail, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileStock_StockDetail));
  FileFinance_descriptor_ = file->message_type(1);
  static const int FileFinance_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileFinance, financedetail_),
  };
  FileFinance_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileFinance_descriptor_,
      FileFinance::default_instance_,
      FileFinance_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileFinance, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileFinance, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileFinance));
  FileFinance_FinanceDetail_descriptor_ = FileFinance_descriptor_->nested_type(0);
  static const int FileFinance_FinanceDetail_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileFinance_FinanceDetail, secucode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileFinance_FinanceDetail, ltsl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileFinance_FinanceDetail, gb_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileFinance_FinanceDetail, jz_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileFinance_FinanceDetail, jlr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileFinance_FinanceDetail, syjd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileFinance_FinanceDetail, fullprice_),
  };
  FileFinance_FinanceDetail_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileFinance_FinanceDetail_descriptor_,
      FileFinance_FinanceDetail::default_instance_,
      FileFinance_FinanceDetail_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileFinance_FinanceDetail, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileFinance_FinanceDetail, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileFinance_FinanceDetail));
  FileFinanceFund_descriptor_ = file->message_type(2);
  static const int FileFinanceFund_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileFinanceFund, financefunddetail_),
  };
  FileFinanceFund_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileFinanceFund_descriptor_,
      FileFinanceFund::default_instance_,
      FileFinanceFund_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileFinanceFund, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileFinanceFund, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileFinanceFund));
  FileFinanceFund_FinanceFundDetail_descriptor_ = FileFinanceFund_descriptor_->nested_type(0);
  static const int FileFinanceFund_FinanceFundDetail_offsets_[21] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileFinanceFund_FinanceFundDetail, secucode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileFinanceFund_FinanceFundDetail, secuname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileFinanceFund_FinanceFundDetail, secupy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileFinanceFund_FinanceFundDetail, secutype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileFinanceFund_FinanceFundDetail, unitnav_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileFinanceFund_FinanceFundDetail, accuunitnav_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileFinanceFund_FinanceFundDetail, changerate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileFinanceFund_FinanceFundDetail, changeratew_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileFinanceFund_FinanceFundDetail, changeratem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileFinanceFund_FinanceFundDetail, changerate3m_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileFinanceFund_FinanceFundDetail, changerate6m_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileFinanceFund_FinanceFundDetail, changeratey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileFinanceFund_FinanceFundDetail, dailyreturn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileFinanceFund_FinanceFundDetail, annuyield_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileFinanceFund_FinanceFundDetail, fundvol_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileFinanceFund_FinanceFundDetail, managementcomid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileFinanceFund_FinanceFundDetail, managementcom_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileFinanceFund_FinanceFundDetail, fundmanager_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileFinanceFund_FinanceFundDetail, fundcustodian_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileFinanceFund_FinanceFundDetail, starrank3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileFinanceFund_FinanceFundDetail, starrank5_),
  };
  FileFinanceFund_FinanceFundDetail_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileFinanceFund_FinanceFundDetail_descriptor_,
      FileFinanceFund_FinanceFundDetail::default_instance_,
      FileFinanceFund_FinanceFundDetail_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileFinanceFund_FinanceFundDetail, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileFinanceFund_FinanceFundDetail, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileFinanceFund_FinanceFundDetail));
  FileZsbx_descriptor_ = file->message_type(3);
  static const int FileZsbx_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileZsbx, zsbxdetail_),
  };
  FileZsbx_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileZsbx_descriptor_,
      FileZsbx::default_instance_,
      FileZsbx_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileZsbx, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileZsbx, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileZsbx));
  FileZsbx_ZsbxDetail_descriptor_ = FileZsbx_descriptor_->nested_type(0);
  static const int FileZsbx_ZsbxDetail_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileZsbx_ZsbxDetail, secucode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileZsbx_ZsbxDetail, ybsl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileZsbx_ZsbxDetail, ybjj_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileZsbx_ZsbxDetail, pjgb_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileZsbx_ZsbxDetail, zsz_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileZsbx_ZsbxDetail, zb_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileZsbx_ZsbxDetail, jtsyl_),
  };
  FileZsbx_ZsbxDetail_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileZsbx_ZsbxDetail_descriptor_,
      FileZsbx_ZsbxDetail::default_instance_,
      FileZsbx_ZsbxDetail_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileZsbx_ZsbxDetail, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileZsbx_ZsbxDetail, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileZsbx_ZsbxDetail));
  FileBlock_descriptor_ = file->message_type(4);
  static const int FileBlock_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileBlock, block_),
  };
  FileBlock_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileBlock_descriptor_,
      FileBlock::default_instance_,
      FileBlock_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileBlock, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileBlock, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileBlock));
  FileBlock_Block_descriptor_ = FileBlock_descriptor_->nested_type(0);
  static const int FileBlock_Block_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileBlock_Block, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileBlock_Block, blockdetail_),
  };
  FileBlock_Block_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileBlock_Block_descriptor_,
      FileBlock_Block::default_instance_,
      FileBlock_Block_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileBlock_Block, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileBlock_Block, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileBlock_Block));
  FileBlock_Block_BlockDetail_descriptor_ = FileBlock_Block_descriptor_->nested_type(0);
  static const int FileBlock_Block_BlockDetail_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileBlock_Block_BlockDetail, blockid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileBlock_Block_BlockDetail, blockname_),
  };
  FileBlock_Block_BlockDetail_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileBlock_Block_BlockDetail_descriptor_,
      FileBlock_Block_BlockDetail::default_instance_,
      FileBlock_Block_BlockDetail_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileBlock_Block_BlockDetail, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileBlock_Block_BlockDetail, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileBlock_Block_BlockDetail));
  FileBlock_Block_Name_descriptor_ = FileBlock_Block_descriptor_->enum_type(0);
  FileBlockStock_descriptor_ = file->message_type(5);
  static const int FileBlockStock_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileBlockStock, blockstock_),
  };
  FileBlockStock_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileBlockStock_descriptor_,
      FileBlockStock::default_instance_,
      FileBlockStock_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileBlockStock, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileBlockStock, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileBlockStock));
  FileBlockStock_BlockStock_descriptor_ = FileBlockStock_descriptor_->nested_type(0);
  static const int FileBlockStock_BlockStock_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileBlockStock_BlockStock, blockid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileBlockStock_BlockStock, blockstockdetail_),
  };
  FileBlockStock_BlockStock_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileBlockStock_BlockStock_descriptor_,
      FileBlockStock_BlockStock::default_instance_,
      FileBlockStock_BlockStock_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileBlockStock_BlockStock, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileBlockStock_BlockStock, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileBlockStock_BlockStock));
  FileBlockStock_BlockStock_BlockStockDetail_descriptor_ = FileBlockStock_BlockStock_descriptor_->nested_type(0);
  static const int FileBlockStock_BlockStock_BlockStockDetail_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileBlockStock_BlockStock_BlockStockDetail, secucode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileBlockStock_BlockStock_BlockStockDetail, exchange_),
  };
  FileBlockStock_BlockStock_BlockStockDetail_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileBlockStock_BlockStock_BlockStockDetail_descriptor_,
      FileBlockStock_BlockStock_BlockStockDetail::default_instance_,
      FileBlockStock_BlockStock_BlockStockDetail_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileBlockStock_BlockStock_BlockStockDetail, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileBlockStock_BlockStock_BlockStockDetail, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileBlockStock_BlockStock_BlockStockDetail));
  FileMd5_descriptor_ = file->message_type(6);
  static const int FileMd5_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileMd5, md5_),
  };
  FileMd5_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileMd5_descriptor_,
      FileMd5::default_instance_,
      FileMd5_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileMd5, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileMd5, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileMd5));
  FileMd5_Md5_descriptor_ = FileMd5_descriptor_->nested_type(0);
  static const int FileMd5_Md5_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileMd5_Md5, filename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileMd5_Md5, md5code_),
  };
  FileMd5_Md5_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileMd5_Md5_descriptor_,
      FileMd5_Md5::default_instance_,
      FileMd5_Md5_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileMd5_Md5, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileMd5_Md5, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileMd5_Md5));
  FileMd5_Md5_FileName_descriptor_ = FileMd5_Md5_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_file_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileStock_descriptor_, &FileStock::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileStock_StockDetail_descriptor_, &FileStock_StockDetail::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileFinance_descriptor_, &FileFinance::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileFinance_FinanceDetail_descriptor_, &FileFinance_FinanceDetail::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileFinanceFund_descriptor_, &FileFinanceFund::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileFinanceFund_FinanceFundDetail_descriptor_, &FileFinanceFund_FinanceFundDetail::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileZsbx_descriptor_, &FileZsbx::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileZsbx_ZsbxDetail_descriptor_, &FileZsbx_ZsbxDetail::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileBlock_descriptor_, &FileBlock::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileBlock_Block_descriptor_, &FileBlock_Block::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileBlock_Block_BlockDetail_descriptor_, &FileBlock_Block_BlockDetail::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileBlockStock_descriptor_, &FileBlockStock::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileBlockStock_BlockStock_descriptor_, &FileBlockStock_BlockStock::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileBlockStock_BlockStock_BlockStockDetail_descriptor_, &FileBlockStock_BlockStock_BlockStockDetail::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileMd5_descriptor_, &FileMd5::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileMd5_Md5_descriptor_, &FileMd5_Md5::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_file_2eproto() {
  delete FileStock::default_instance_;
  delete FileStock_reflection_;
  delete FileStock_StockDetail::default_instance_;
  delete FileStock_StockDetail_reflection_;
  delete FileFinance::default_instance_;
  delete FileFinance_reflection_;
  delete FileFinance_FinanceDetail::default_instance_;
  delete FileFinance_FinanceDetail_reflection_;
  delete FileFinanceFund::default_instance_;
  delete FileFinanceFund_reflection_;
  delete FileFinanceFund_FinanceFundDetail::default_instance_;
  delete FileFinanceFund_FinanceFundDetail_reflection_;
  delete FileZsbx::default_instance_;
  delete FileZsbx_reflection_;
  delete FileZsbx_ZsbxDetail::default_instance_;
  delete FileZsbx_ZsbxDetail_reflection_;
  delete FileBlock::default_instance_;
  delete FileBlock_reflection_;
  delete FileBlock_Block::default_instance_;
  delete FileBlock_Block_reflection_;
  delete FileBlock_Block_BlockDetail::default_instance_;
  delete FileBlock_Block_BlockDetail_reflection_;
  delete FileBlockStock::default_instance_;
  delete FileBlockStock_reflection_;
  delete FileBlockStock_BlockStock::default_instance_;
  delete FileBlockStock_BlockStock_reflection_;
  delete FileBlockStock_BlockStock_BlockStockDetail::default_instance_;
  delete FileBlockStock_BlockStock_BlockStockDetail_reflection_;
  delete FileMd5::default_instance_;
  delete FileMd5_reflection_;
  delete FileMd5_Md5::default_instance_;
  delete FileMd5_Md5_reflection_;
}

void protobuf_AddDesc_file_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\nfile.proto\022\005quote\"\272\001\n\tFileStock\0221\n\013sto"
    "ckdetail\030\001 \003(\0132\034.quote.FileStock.StockDe"
    "tail\032z\n\013StockDetail\022\020\n\010secucode\030\001 \002(\t\022\020\n"
    "\010secuname\030\002 \002(\t\022\016\n\006secupy\030\003 \003(\t\022\020\n\010secut"
    "ype\030\004 \002(\005\022\023\n\013coefficient\030\005 \002(\005\022\020\n\010preclo"
    "se\030\006 \002(\002\"\275\001\n\013FileFinance\0227\n\rfinancedetai"
    "l\030\001 \003(\0132 .quote.FileFinance.FinanceDetai"
    "l\032u\n\rFinanceDetail\022\020\n\010secucode\030\001 \002(\t\022\014\n\004"
    "ltsl\030\002 \001(\003\022\n\n\002gb\030\003 \001(\002\022\n\n\002jz\030\004 \001(\002\022\013\n\003jl"
    "r\030\005 \001(\002\022\014\n\004syjd\030\006 \001(\005\022\021\n\tfullprice\030\007 \001(\002"
    "\"\222\004\n\017FileFinanceFund\022C\n\021financefunddetai"
    "l\030\001 \003(\0132(.quote.FileFinanceFund.FinanceF"
    "undDetail\032\271\003\n\021FinanceFundDetail\022\020\n\010secuc"
    "ode\030\001 \002(\t\022\020\n\010secuname\030\002 \002(\t\022\016\n\006secupy\030\003 "
    "\003(\t\022\020\n\010secutype\030\004 \002(\005\022\017\n\007unitnav\030\005 \001(\002\022\023"
    "\n\013accuunitnav\030\006 \001(\002\022\022\n\nchangerate\030\007 \001(\002\022"
    "\023\n\013changeratew\030\010 \001(\002\022\023\n\013changeratem\030\t \001("
    "\002\022\024\n\014changerate3m\030\n \001(\002\022\024\n\014changerate6m\030"
    "\013 \001(\002\022\023\n\013changeratey\030\014 \001(\002\022\023\n\013dailyretur"
    "n\030\r \001(\002\022\021\n\tannuyield\030\016 \001(\002\022\017\n\007fundvol\030\017 "
    "\001(\002\022\027\n\017managementcomid\030\020 \001(\005\022\025\n\rmanageme"
    "ntcom\030\021 \001(\t\022\023\n\013fundmanager\030\022 \001(\t\022\025\n\rfund"
    "custodian\030\023 \001(\t\022\021\n\tstarrank3\030\024 \001(\005\022\021\n\tst"
    "arrank5\030\025 \001(\005\"\254\001\n\010FileZsbx\022.\n\nzsbxdetail"
    "\030\001 \003(\0132\032.quote.FileZsbx.ZsbxDetail\032p\n\nZs"
    "bxDetail\022\020\n\010secucode\030\001 \002(\t\022\014\n\004ybsl\030\002 \001(\005"
    "\022\014\n\004ybjj\030\003 \001(\002\022\014\n\004pjgb\030\004 \001(\002\022\013\n\003zsz\030\005 \001("
    "\002\022\n\n\002zb\030\006 \001(\002\022\r\n\005jtsyl\030\007 \001(\002\"\222\002\n\tFileBlo"
    "ck\022%\n\005block\030\001 \003(\0132\026.quote.FileBlock.Bloc"
    "k\032\335\001\n\005Block\022)\n\004name\030\001 \002(\0162\033.quote.FileBl"
    "ock.Block.Name\0227\n\013blockdetail\030\002 \003(\0132\".qu"
    "ote.FileBlock.Block.BlockDetail\0321\n\013Block"
    "Detail\022\017\n\007blockid\030\001 \002(\005\022\021\n\tblockname\030\002 \002"
    "(\t\"=\n\004Name\022\014\n\010INDUSTRY\020\001\022\020\n\014CSRCINDUSTRY"
    "\020\002\022\010\n\004AREA\020\003\022\013\n\007CONCEPT\020\004\"\353\001\n\016FileBlockS"
    "tock\0224\n\nblockstock\030\001 \003(\0132 .quote.FileBlo"
    "ckStock.BlockStock\032\242\001\n\nBlockStock\022\017\n\007blo"
    "ckid\030\001 \002(\005\022K\n\020blockstockdetail\030\002 \003(\01321.q"
    "uote.FileBlockStock.BlockStock.BlockStoc"
    "kDetail\0326\n\020BlockStockDetail\022\020\n\010secucode\030"
    "\001 \002(\t\022\020\n\010exchange\030\002 \002(\005\"\341\001\n\007FileMd5\022\037\n\003m"
    "d5\030\001 \003(\0132\022.quote.FileMd5.Md5\032\264\001\n\003Md5\022-\n\010"
    "filename\030\001 \002(\0162\033.quote.FileMd5.Md5.FileN"
    "ame\022\017\n\007md5code\030\002 \002(\t\"m\n\010FileName\022\014\n\010SH_S"
    "TOCK\020\001\022\014\n\010SZ_STOCK\020\002\022\020\n\014FINANCE_DATA\020\003\022\016"
    "\n\nKF_FINANCE\020\004\022\016\n\nBLOCK_DATA\020\005\022\023\n\017BLOCKS"
    "TOCK_DATA\020\006", 1851);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "file.proto", &protobuf_RegisterTypes);
  FileStock::default_instance_ = new FileStock();
  FileStock_StockDetail::default_instance_ = new FileStock_StockDetail();
  FileFinance::default_instance_ = new FileFinance();
  FileFinance_FinanceDetail::default_instance_ = new FileFinance_FinanceDetail();
  FileFinanceFund::default_instance_ = new FileFinanceFund();
  FileFinanceFund_FinanceFundDetail::default_instance_ = new FileFinanceFund_FinanceFundDetail();
  FileZsbx::default_instance_ = new FileZsbx();
  FileZsbx_ZsbxDetail::default_instance_ = new FileZsbx_ZsbxDetail();
  FileBlock::default_instance_ = new FileBlock();
  FileBlock_Block::default_instance_ = new FileBlock_Block();
  FileBlock_Block_BlockDetail::default_instance_ = new FileBlock_Block_BlockDetail();
  FileBlockStock::default_instance_ = new FileBlockStock();
  FileBlockStock_BlockStock::default_instance_ = new FileBlockStock_BlockStock();
  FileBlockStock_BlockStock_BlockStockDetail::default_instance_ = new FileBlockStock_BlockStock_BlockStockDetail();
  FileMd5::default_instance_ = new FileMd5();
  FileMd5_Md5::default_instance_ = new FileMd5_Md5();
  FileStock::default_instance_->InitAsDefaultInstance();
  FileStock_StockDetail::default_instance_->InitAsDefaultInstance();
  FileFinance::default_instance_->InitAsDefaultInstance();
  FileFinance_FinanceDetail::default_instance_->InitAsDefaultInstance();
  FileFinanceFund::default_instance_->InitAsDefaultInstance();
  FileFinanceFund_FinanceFundDetail::default_instance_->InitAsDefaultInstance();
  FileZsbx::default_instance_->InitAsDefaultInstance();
  FileZsbx_ZsbxDetail::default_instance_->InitAsDefaultInstance();
  FileBlock::default_instance_->InitAsDefaultInstance();
  FileBlock_Block::default_instance_->InitAsDefaultInstance();
  FileBlock_Block_BlockDetail::default_instance_->InitAsDefaultInstance();
  FileBlockStock::default_instance_->InitAsDefaultInstance();
  FileBlockStock_BlockStock::default_instance_->InitAsDefaultInstance();
  FileBlockStock_BlockStock_BlockStockDetail::default_instance_->InitAsDefaultInstance();
  FileMd5::default_instance_->InitAsDefaultInstance();
  FileMd5_Md5::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_file_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_file_2eproto {
  StaticDescriptorInitializer_file_2eproto() {
    protobuf_AddDesc_file_2eproto();
  }
} static_descriptor_initializer_file_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int FileStock_StockDetail::kSecucodeFieldNumber;
const int FileStock_StockDetail::kSecunameFieldNumber;
const int FileStock_StockDetail::kSecupyFieldNumber;
const int FileStock_StockDetail::kSecutypeFieldNumber;
const int FileStock_StockDetail::kCoefficientFieldNumber;
const int FileStock_StockDetail::kPrecloseFieldNumber;
#endif  // !_MSC_VER

FileStock_StockDetail::FileStock_StockDetail()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileStock_StockDetail::InitAsDefaultInstance() {
}

FileStock_StockDetail::FileStock_StockDetail(const FileStock_StockDetail& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileStock_StockDetail::SharedCtor() {
  _cached_size_ = 0;
  secucode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  secuname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  secutype_ = 0;
  coefficient_ = 0;
  preclose_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileStock_StockDetail::~FileStock_StockDetail() {
  SharedDtor();
}

void FileStock_StockDetail::SharedDtor() {
  if (secucode_ != &::google::protobuf::internal::kEmptyString) {
    delete secucode_;
  }
  if (secuname_ != &::google::protobuf::internal::kEmptyString) {
    delete secuname_;
  }
  if (this != default_instance_) {
  }
}

void FileStock_StockDetail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileStock_StockDetail::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileStock_StockDetail_descriptor_;
}

const FileStock_StockDetail& FileStock_StockDetail::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_file_2eproto();  return *default_instance_;
}

FileStock_StockDetail* FileStock_StockDetail::default_instance_ = NULL;

FileStock_StockDetail* FileStock_StockDetail::New() const {
  return new FileStock_StockDetail;
}

void FileStock_StockDetail::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_secucode()) {
      if (secucode_ != &::google::protobuf::internal::kEmptyString) {
        secucode_->clear();
      }
    }
    if (has_secuname()) {
      if (secuname_ != &::google::protobuf::internal::kEmptyString) {
        secuname_->clear();
      }
    }
    secutype_ = 0;
    coefficient_ = 0;
    preclose_ = 0;
  }
  secupy_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileStock_StockDetail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string secucode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_secucode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->secucode().data(), this->secucode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_secuname;
        break;
      }
      
      // required string secuname = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_secuname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_secuname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->secuname().data(), this->secuname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_secupy;
        break;
      }
      
      // repeated string secupy = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_secupy:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_secupy()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->secupy(0).data(), this->secupy(0).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_secupy;
        if (input->ExpectTag(32)) goto parse_secutype;
        break;
      }
      
      // required int32 secutype = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_secutype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &secutype_)));
          set_has_secutype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_coefficient;
        break;
      }
      
      // required int32 coefficient = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_coefficient:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &coefficient_)));
          set_has_coefficient();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(53)) goto parse_preclose;
        break;
      }
      
      // required float preclose = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_preclose:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &preclose_)));
          set_has_preclose();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FileStock_StockDetail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string secucode = 1;
  if (has_secucode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->secucode().data(), this->secucode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->secucode(), output);
  }
  
  // required string secuname = 2;
  if (has_secuname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->secuname().data(), this->secuname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->secuname(), output);
  }
  
  // repeated string secupy = 3;
  for (int i = 0; i < this->secupy_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->secupy(i).data(), this->secupy(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->secupy(i), output);
  }
  
  // required int32 secutype = 4;
  if (has_secutype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->secutype(), output);
  }
  
  // required int32 coefficient = 5;
  if (has_coefficient()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->coefficient(), output);
  }
  
  // required float preclose = 6;
  if (has_preclose()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->preclose(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileStock_StockDetail::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string secucode = 1;
  if (has_secucode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->secucode().data(), this->secucode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->secucode(), target);
  }
  
  // required string secuname = 2;
  if (has_secuname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->secuname().data(), this->secuname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->secuname(), target);
  }
  
  // repeated string secupy = 3;
  for (int i = 0; i < this->secupy_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->secupy(i).data(), this->secupy(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->secupy(i), target);
  }
  
  // required int32 secutype = 4;
  if (has_secutype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->secutype(), target);
  }
  
  // required int32 coefficient = 5;
  if (has_coefficient()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->coefficient(), target);
  }
  
  // required float preclose = 6;
  if (has_preclose()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->preclose(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileStock_StockDetail::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string secucode = 1;
    if (has_secucode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->secucode());
    }
    
    // required string secuname = 2;
    if (has_secuname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->secuname());
    }
    
    // required int32 secutype = 4;
    if (has_secutype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->secutype());
    }
    
    // required int32 coefficient = 5;
    if (has_coefficient()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->coefficient());
    }
    
    // required float preclose = 6;
    if (has_preclose()) {
      total_size += 1 + 4;
    }
    
  }
  // repeated string secupy = 3;
  total_size += 1 * this->secupy_size();
  for (int i = 0; i < this->secupy_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->secupy(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileStock_StockDetail::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileStock_StockDetail* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileStock_StockDetail*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileStock_StockDetail::MergeFrom(const FileStock_StockDetail& from) {
  GOOGLE_CHECK_NE(&from, this);
  secupy_.MergeFrom(from.secupy_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_secucode()) {
      set_secucode(from.secucode());
    }
    if (from.has_secuname()) {
      set_secuname(from.secuname());
    }
    if (from.has_secutype()) {
      set_secutype(from.secutype());
    }
    if (from.has_coefficient()) {
      set_coefficient(from.coefficient());
    }
    if (from.has_preclose()) {
      set_preclose(from.preclose());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileStock_StockDetail::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileStock_StockDetail::CopyFrom(const FileStock_StockDetail& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileStock_StockDetail::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003b) != 0x0000003b) return false;
  
  return true;
}

void FileStock_StockDetail::Swap(FileStock_StockDetail* other) {
  if (other != this) {
    std::swap(secucode_, other->secucode_);
    std::swap(secuname_, other->secuname_);
    secupy_.Swap(&other->secupy_);
    std::swap(secutype_, other->secutype_);
    std::swap(coefficient_, other->coefficient_);
    std::swap(preclose_, other->preclose_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileStock_StockDetail::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileStock_StockDetail_descriptor_;
  metadata.reflection = FileStock_StockDetail_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int FileStock::kStockdetailFieldNumber;
#endif  // !_MSC_VER

FileStock::FileStock()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileStock::InitAsDefaultInstance() {
}

FileStock::FileStock(const FileStock& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileStock::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileStock::~FileStock() {
  SharedDtor();
}

void FileStock::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FileStock::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileStock::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileStock_descriptor_;
}

const FileStock& FileStock::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_file_2eproto();  return *default_instance_;
}

FileStock* FileStock::default_instance_ = NULL;

FileStock* FileStock::New() const {
  return new FileStock;
}

void FileStock::Clear() {
  stockdetail_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileStock::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .quote.FileStock.StockDetail stockdetail = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_stockdetail:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_stockdetail()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_stockdetail;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FileStock::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .quote.FileStock.StockDetail stockdetail = 1;
  for (int i = 0; i < this->stockdetail_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->stockdetail(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileStock::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .quote.FileStock.StockDetail stockdetail = 1;
  for (int i = 0; i < this->stockdetail_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->stockdetail(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileStock::ByteSize() const {
  int total_size = 0;
  
  // repeated .quote.FileStock.StockDetail stockdetail = 1;
  total_size += 1 * this->stockdetail_size();
  for (int i = 0; i < this->stockdetail_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->stockdetail(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileStock::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileStock* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileStock*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileStock::MergeFrom(const FileStock& from) {
  GOOGLE_CHECK_NE(&from, this);
  stockdetail_.MergeFrom(from.stockdetail_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileStock::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileStock::CopyFrom(const FileStock& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileStock::IsInitialized() const {
  
  for (int i = 0; i < stockdetail_size(); i++) {
    if (!this->stockdetail(i).IsInitialized()) return false;
  }
  return true;
}

void FileStock::Swap(FileStock* other) {
  if (other != this) {
    stockdetail_.Swap(&other->stockdetail_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileStock::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileStock_descriptor_;
  metadata.reflection = FileStock_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FileFinance_FinanceDetail::kSecucodeFieldNumber;
const int FileFinance_FinanceDetail::kLtslFieldNumber;
const int FileFinance_FinanceDetail::kGbFieldNumber;
const int FileFinance_FinanceDetail::kJzFieldNumber;
const int FileFinance_FinanceDetail::kJlrFieldNumber;
const int FileFinance_FinanceDetail::kSyjdFieldNumber;
const int FileFinance_FinanceDetail::kFullpriceFieldNumber;
#endif  // !_MSC_VER

FileFinance_FinanceDetail::FileFinance_FinanceDetail()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileFinance_FinanceDetail::InitAsDefaultInstance() {
}

FileFinance_FinanceDetail::FileFinance_FinanceDetail(const FileFinance_FinanceDetail& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileFinance_FinanceDetail::SharedCtor() {
  _cached_size_ = 0;
  secucode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ltsl_ = GOOGLE_LONGLONG(0);
  gb_ = 0;
  jz_ = 0;
  jlr_ = 0;
  syjd_ = 0;
  fullprice_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileFinance_FinanceDetail::~FileFinance_FinanceDetail() {
  SharedDtor();
}

void FileFinance_FinanceDetail::SharedDtor() {
  if (secucode_ != &::google::protobuf::internal::kEmptyString) {
    delete secucode_;
  }
  if (this != default_instance_) {
  }
}

void FileFinance_FinanceDetail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileFinance_FinanceDetail::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileFinance_FinanceDetail_descriptor_;
}

const FileFinance_FinanceDetail& FileFinance_FinanceDetail::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_file_2eproto();  return *default_instance_;
}

FileFinance_FinanceDetail* FileFinance_FinanceDetail::default_instance_ = NULL;

FileFinance_FinanceDetail* FileFinance_FinanceDetail::New() const {
  return new FileFinance_FinanceDetail;
}

void FileFinance_FinanceDetail::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_secucode()) {
      if (secucode_ != &::google::protobuf::internal::kEmptyString) {
        secucode_->clear();
      }
    }
    ltsl_ = GOOGLE_LONGLONG(0);
    gb_ = 0;
    jz_ = 0;
    jlr_ = 0;
    syjd_ = 0;
    fullprice_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileFinance_FinanceDetail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string secucode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_secucode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->secucode().data(), this->secucode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_ltsl;
        break;
      }
      
      // optional int64 ltsl = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ltsl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ltsl_)));
          set_has_ltsl();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(29)) goto parse_gb;
        break;
      }
      
      // optional float gb = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_gb:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &gb_)));
          set_has_gb();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(37)) goto parse_jz;
        break;
      }
      
      // optional float jz = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_jz:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &jz_)));
          set_has_jz();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(45)) goto parse_jlr;
        break;
      }
      
      // optional float jlr = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_jlr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &jlr_)));
          set_has_jlr();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_syjd;
        break;
      }
      
      // optional int32 syjd = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_syjd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &syjd_)));
          set_has_syjd();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(61)) goto parse_fullprice;
        break;
      }
      
      // optional float fullprice = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_fullprice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fullprice_)));
          set_has_fullprice();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FileFinance_FinanceDetail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string secucode = 1;
  if (has_secucode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->secucode().data(), this->secucode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->secucode(), output);
  }
  
  // optional int64 ltsl = 2;
  if (has_ltsl()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->ltsl(), output);
  }
  
  // optional float gb = 3;
  if (has_gb()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->gb(), output);
  }
  
  // optional float jz = 4;
  if (has_jz()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->jz(), output);
  }
  
  // optional float jlr = 5;
  if (has_jlr()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->jlr(), output);
  }
  
  // optional int32 syjd = 6;
  if (has_syjd()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->syjd(), output);
  }
  
  // optional float fullprice = 7;
  if (has_fullprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->fullprice(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileFinance_FinanceDetail::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string secucode = 1;
  if (has_secucode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->secucode().data(), this->secucode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->secucode(), target);
  }
  
  // optional int64 ltsl = 2;
  if (has_ltsl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->ltsl(), target);
  }
  
  // optional float gb = 3;
  if (has_gb()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->gb(), target);
  }
  
  // optional float jz = 4;
  if (has_jz()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->jz(), target);
  }
  
  // optional float jlr = 5;
  if (has_jlr()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->jlr(), target);
  }
  
  // optional int32 syjd = 6;
  if (has_syjd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->syjd(), target);
  }
  
  // optional float fullprice = 7;
  if (has_fullprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->fullprice(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileFinance_FinanceDetail::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string secucode = 1;
    if (has_secucode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->secucode());
    }
    
    // optional int64 ltsl = 2;
    if (has_ltsl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->ltsl());
    }
    
    // optional float gb = 3;
    if (has_gb()) {
      total_size += 1 + 4;
    }
    
    // optional float jz = 4;
    if (has_jz()) {
      total_size += 1 + 4;
    }
    
    // optional float jlr = 5;
    if (has_jlr()) {
      total_size += 1 + 4;
    }
    
    // optional int32 syjd = 6;
    if (has_syjd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->syjd());
    }
    
    // optional float fullprice = 7;
    if (has_fullprice()) {
      total_size += 1 + 4;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileFinance_FinanceDetail::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileFinance_FinanceDetail* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileFinance_FinanceDetail*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileFinance_FinanceDetail::MergeFrom(const FileFinance_FinanceDetail& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_secucode()) {
      set_secucode(from.secucode());
    }
    if (from.has_ltsl()) {
      set_ltsl(from.ltsl());
    }
    if (from.has_gb()) {
      set_gb(from.gb());
    }
    if (from.has_jz()) {
      set_jz(from.jz());
    }
    if (from.has_jlr()) {
      set_jlr(from.jlr());
    }
    if (from.has_syjd()) {
      set_syjd(from.syjd());
    }
    if (from.has_fullprice()) {
      set_fullprice(from.fullprice());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileFinance_FinanceDetail::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileFinance_FinanceDetail::CopyFrom(const FileFinance_FinanceDetail& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileFinance_FinanceDetail::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void FileFinance_FinanceDetail::Swap(FileFinance_FinanceDetail* other) {
  if (other != this) {
    std::swap(secucode_, other->secucode_);
    std::swap(ltsl_, other->ltsl_);
    std::swap(gb_, other->gb_);
    std::swap(jz_, other->jz_);
    std::swap(jlr_, other->jlr_);
    std::swap(syjd_, other->syjd_);
    std::swap(fullprice_, other->fullprice_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileFinance_FinanceDetail::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileFinance_FinanceDetail_descriptor_;
  metadata.reflection = FileFinance_FinanceDetail_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int FileFinance::kFinancedetailFieldNumber;
#endif  // !_MSC_VER

FileFinance::FileFinance()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileFinance::InitAsDefaultInstance() {
}

FileFinance::FileFinance(const FileFinance& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileFinance::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileFinance::~FileFinance() {
  SharedDtor();
}

void FileFinance::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FileFinance::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileFinance::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileFinance_descriptor_;
}

const FileFinance& FileFinance::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_file_2eproto();  return *default_instance_;
}

FileFinance* FileFinance::default_instance_ = NULL;

FileFinance* FileFinance::New() const {
  return new FileFinance;
}

void FileFinance::Clear() {
  financedetail_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileFinance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .quote.FileFinance.FinanceDetail financedetail = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_financedetail:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_financedetail()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_financedetail;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FileFinance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .quote.FileFinance.FinanceDetail financedetail = 1;
  for (int i = 0; i < this->financedetail_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->financedetail(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileFinance::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .quote.FileFinance.FinanceDetail financedetail = 1;
  for (int i = 0; i < this->financedetail_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->financedetail(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileFinance::ByteSize() const {
  int total_size = 0;
  
  // repeated .quote.FileFinance.FinanceDetail financedetail = 1;
  total_size += 1 * this->financedetail_size();
  for (int i = 0; i < this->financedetail_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->financedetail(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileFinance::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileFinance* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileFinance*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileFinance::MergeFrom(const FileFinance& from) {
  GOOGLE_CHECK_NE(&from, this);
  financedetail_.MergeFrom(from.financedetail_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileFinance::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileFinance::CopyFrom(const FileFinance& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileFinance::IsInitialized() const {
  
  for (int i = 0; i < financedetail_size(); i++) {
    if (!this->financedetail(i).IsInitialized()) return false;
  }
  return true;
}

void FileFinance::Swap(FileFinance* other) {
  if (other != this) {
    financedetail_.Swap(&other->financedetail_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileFinance::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileFinance_descriptor_;
  metadata.reflection = FileFinance_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FileFinanceFund_FinanceFundDetail::kSecucodeFieldNumber;
const int FileFinanceFund_FinanceFundDetail::kSecunameFieldNumber;
const int FileFinanceFund_FinanceFundDetail::kSecupyFieldNumber;
const int FileFinanceFund_FinanceFundDetail::kSecutypeFieldNumber;
const int FileFinanceFund_FinanceFundDetail::kUnitnavFieldNumber;
const int FileFinanceFund_FinanceFundDetail::kAccuunitnavFieldNumber;
const int FileFinanceFund_FinanceFundDetail::kChangerateFieldNumber;
const int FileFinanceFund_FinanceFundDetail::kChangeratewFieldNumber;
const int FileFinanceFund_FinanceFundDetail::kChangeratemFieldNumber;
const int FileFinanceFund_FinanceFundDetail::kChangerate3MFieldNumber;
const int FileFinanceFund_FinanceFundDetail::kChangerate6MFieldNumber;
const int FileFinanceFund_FinanceFundDetail::kChangerateyFieldNumber;
const int FileFinanceFund_FinanceFundDetail::kDailyreturnFieldNumber;
const int FileFinanceFund_FinanceFundDetail::kAnnuyieldFieldNumber;
const int FileFinanceFund_FinanceFundDetail::kFundvolFieldNumber;
const int FileFinanceFund_FinanceFundDetail::kManagementcomidFieldNumber;
const int FileFinanceFund_FinanceFundDetail::kManagementcomFieldNumber;
const int FileFinanceFund_FinanceFundDetail::kFundmanagerFieldNumber;
const int FileFinanceFund_FinanceFundDetail::kFundcustodianFieldNumber;
const int FileFinanceFund_FinanceFundDetail::kStarrank3FieldNumber;
const int FileFinanceFund_FinanceFundDetail::kStarrank5FieldNumber;
#endif  // !_MSC_VER

FileFinanceFund_FinanceFundDetail::FileFinanceFund_FinanceFundDetail()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileFinanceFund_FinanceFundDetail::InitAsDefaultInstance() {
}

FileFinanceFund_FinanceFundDetail::FileFinanceFund_FinanceFundDetail(const FileFinanceFund_FinanceFundDetail& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileFinanceFund_FinanceFundDetail::SharedCtor() {
  _cached_size_ = 0;
  secucode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  secuname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  secutype_ = 0;
  unitnav_ = 0;
  accuunitnav_ = 0;
  changerate_ = 0;
  changeratew_ = 0;
  changeratem_ = 0;
  changerate3m_ = 0;
  changerate6m_ = 0;
  changeratey_ = 0;
  dailyreturn_ = 0;
  annuyield_ = 0;
  fundvol_ = 0;
  managementcomid_ = 0;
  managementcom_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  fundmanager_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  fundcustodian_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  starrank3_ = 0;
  starrank5_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileFinanceFund_FinanceFundDetail::~FileFinanceFund_FinanceFundDetail() {
  SharedDtor();
}

void FileFinanceFund_FinanceFundDetail::SharedDtor() {
  if (secucode_ != &::google::protobuf::internal::kEmptyString) {
    delete secucode_;
  }
  if (secuname_ != &::google::protobuf::internal::kEmptyString) {
    delete secuname_;
  }
  if (managementcom_ != &::google::protobuf::internal::kEmptyString) {
    delete managementcom_;
  }
  if (fundmanager_ != &::google::protobuf::internal::kEmptyString) {
    delete fundmanager_;
  }
  if (fundcustodian_ != &::google::protobuf::internal::kEmptyString) {
    delete fundcustodian_;
  }
  if (this != default_instance_) {
  }
}

void FileFinanceFund_FinanceFundDetail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileFinanceFund_FinanceFundDetail::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileFinanceFund_FinanceFundDetail_descriptor_;
}

const FileFinanceFund_FinanceFundDetail& FileFinanceFund_FinanceFundDetail::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_file_2eproto();  return *default_instance_;
}

FileFinanceFund_FinanceFundDetail* FileFinanceFund_FinanceFundDetail::default_instance_ = NULL;

FileFinanceFund_FinanceFundDetail* FileFinanceFund_FinanceFundDetail::New() const {
  return new FileFinanceFund_FinanceFundDetail;
}

void FileFinanceFund_FinanceFundDetail::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_secucode()) {
      if (secucode_ != &::google::protobuf::internal::kEmptyString) {
        secucode_->clear();
      }
    }
    if (has_secuname()) {
      if (secuname_ != &::google::protobuf::internal::kEmptyString) {
        secuname_->clear();
      }
    }
    secutype_ = 0;
    unitnav_ = 0;
    accuunitnav_ = 0;
    changerate_ = 0;
    changeratew_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    changeratem_ = 0;
    changerate3m_ = 0;
    changerate6m_ = 0;
    changeratey_ = 0;
    dailyreturn_ = 0;
    annuyield_ = 0;
    fundvol_ = 0;
    managementcomid_ = 0;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (has_managementcom()) {
      if (managementcom_ != &::google::protobuf::internal::kEmptyString) {
        managementcom_->clear();
      }
    }
    if (has_fundmanager()) {
      if (fundmanager_ != &::google::protobuf::internal::kEmptyString) {
        fundmanager_->clear();
      }
    }
    if (has_fundcustodian()) {
      if (fundcustodian_ != &::google::protobuf::internal::kEmptyString) {
        fundcustodian_->clear();
      }
    }
    starrank3_ = 0;
    starrank5_ = 0;
  }
  secupy_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileFinanceFund_FinanceFundDetail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string secucode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_secucode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->secucode().data(), this->secucode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_secuname;
        break;
      }
      
      // required string secuname = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_secuname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_secuname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->secuname().data(), this->secuname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_secupy;
        break;
      }
      
      // repeated string secupy = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_secupy:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_secupy()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->secupy(0).data(), this->secupy(0).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_secupy;
        if (input->ExpectTag(32)) goto parse_secutype;
        break;
      }
      
      // required int32 secutype = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_secutype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &secutype_)));
          set_has_secutype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(45)) goto parse_unitnav;
        break;
      }
      
      // optional float unitnav = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_unitnav:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &unitnav_)));
          set_has_unitnav();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(53)) goto parse_accuunitnav;
        break;
      }
      
      // optional float accuunitnav = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_accuunitnav:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &accuunitnav_)));
          set_has_accuunitnav();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(61)) goto parse_changerate;
        break;
      }
      
      // optional float changerate = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_changerate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &changerate_)));
          set_has_changerate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(69)) goto parse_changeratew;
        break;
      }
      
      // optional float changeratew = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_changeratew:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &changeratew_)));
          set_has_changeratew();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(77)) goto parse_changeratem;
        break;
      }
      
      // optional float changeratem = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_changeratem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &changeratem_)));
          set_has_changeratem();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(85)) goto parse_changerate3m;
        break;
      }
      
      // optional float changerate3m = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_changerate3m:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &changerate3m_)));
          set_has_changerate3m();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(93)) goto parse_changerate6m;
        break;
      }
      
      // optional float changerate6m = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_changerate6m:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &changerate6m_)));
          set_has_changerate6m();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(101)) goto parse_changeratey;
        break;
      }
      
      // optional float changeratey = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_changeratey:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &changeratey_)));
          set_has_changeratey();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(109)) goto parse_dailyreturn;
        break;
      }
      
      // optional float dailyreturn = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_dailyreturn:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &dailyreturn_)));
          set_has_dailyreturn();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(117)) goto parse_annuyield;
        break;
      }
      
      // optional float annuyield = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_annuyield:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &annuyield_)));
          set_has_annuyield();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(125)) goto parse_fundvol;
        break;
      }
      
      // optional float fundvol = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_fundvol:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fundvol_)));
          set_has_fundvol();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_managementcomid;
        break;
      }
      
      // optional int32 managementcomid = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_managementcomid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &managementcomid_)));
          set_has_managementcomid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_managementcom;
        break;
      }
      
      // optional string managementcom = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_managementcom:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_managementcom()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->managementcom().data(), this->managementcom().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_fundmanager;
        break;
      }
      
      // optional string fundmanager = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fundmanager:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fundmanager()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->fundmanager().data(), this->fundmanager().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_fundcustodian;
        break;
      }
      
      // optional string fundcustodian = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fundcustodian:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fundcustodian()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->fundcustodian().data(), this->fundcustodian().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(160)) goto parse_starrank3;
        break;
      }
      
      // optional int32 starrank3 = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_starrank3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &starrank3_)));
          set_has_starrank3();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(168)) goto parse_starrank5;
        break;
      }
      
      // optional int32 starrank5 = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_starrank5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &starrank5_)));
          set_has_starrank5();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FileFinanceFund_FinanceFundDetail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string secucode = 1;
  if (has_secucode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->secucode().data(), this->secucode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->secucode(), output);
  }
  
  // required string secuname = 2;
  if (has_secuname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->secuname().data(), this->secuname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->secuname(), output);
  }
  
  // repeated string secupy = 3;
  for (int i = 0; i < this->secupy_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->secupy(i).data(), this->secupy(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->secupy(i), output);
  }
  
  // required int32 secutype = 4;
  if (has_secutype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->secutype(), output);
  }
  
  // optional float unitnav = 5;
  if (has_unitnav()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->unitnav(), output);
  }
  
  // optional float accuunitnav = 6;
  if (has_accuunitnav()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->accuunitnav(), output);
  }
  
  // optional float changerate = 7;
  if (has_changerate()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->changerate(), output);
  }
  
  // optional float changeratew = 8;
  if (has_changeratew()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->changeratew(), output);
  }
  
  // optional float changeratem = 9;
  if (has_changeratem()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->changeratem(), output);
  }
  
  // optional float changerate3m = 10;
  if (has_changerate3m()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->changerate3m(), output);
  }
  
  // optional float changerate6m = 11;
  if (has_changerate6m()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->changerate6m(), output);
  }
  
  // optional float changeratey = 12;
  if (has_changeratey()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->changeratey(), output);
  }
  
  // optional float dailyreturn = 13;
  if (has_dailyreturn()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(13, this->dailyreturn(), output);
  }
  
  // optional float annuyield = 14;
  if (has_annuyield()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(14, this->annuyield(), output);
  }
  
  // optional float fundvol = 15;
  if (has_fundvol()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(15, this->fundvol(), output);
  }
  
  // optional int32 managementcomid = 16;
  if (has_managementcomid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->managementcomid(), output);
  }
  
  // optional string managementcom = 17;
  if (has_managementcom()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->managementcom().data(), this->managementcom().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      17, this->managementcom(), output);
  }
  
  // optional string fundmanager = 18;
  if (has_fundmanager()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->fundmanager().data(), this->fundmanager().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      18, this->fundmanager(), output);
  }
  
  // optional string fundcustodian = 19;
  if (has_fundcustodian()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->fundcustodian().data(), this->fundcustodian().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      19, this->fundcustodian(), output);
  }
  
  // optional int32 starrank3 = 20;
  if (has_starrank3()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->starrank3(), output);
  }
  
  // optional int32 starrank5 = 21;
  if (has_starrank5()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->starrank5(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileFinanceFund_FinanceFundDetail::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string secucode = 1;
  if (has_secucode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->secucode().data(), this->secucode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->secucode(), target);
  }
  
  // required string secuname = 2;
  if (has_secuname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->secuname().data(), this->secuname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->secuname(), target);
  }
  
  // repeated string secupy = 3;
  for (int i = 0; i < this->secupy_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->secupy(i).data(), this->secupy(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->secupy(i), target);
  }
  
  // required int32 secutype = 4;
  if (has_secutype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->secutype(), target);
  }
  
  // optional float unitnav = 5;
  if (has_unitnav()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->unitnav(), target);
  }
  
  // optional float accuunitnav = 6;
  if (has_accuunitnav()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->accuunitnav(), target);
  }
  
  // optional float changerate = 7;
  if (has_changerate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->changerate(), target);
  }
  
  // optional float changeratew = 8;
  if (has_changeratew()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->changeratew(), target);
  }
  
  // optional float changeratem = 9;
  if (has_changeratem()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->changeratem(), target);
  }
  
  // optional float changerate3m = 10;
  if (has_changerate3m()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->changerate3m(), target);
  }
  
  // optional float changerate6m = 11;
  if (has_changerate6m()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->changerate6m(), target);
  }
  
  // optional float changeratey = 12;
  if (has_changeratey()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->changeratey(), target);
  }
  
  // optional float dailyreturn = 13;
  if (has_dailyreturn()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(13, this->dailyreturn(), target);
  }
  
  // optional float annuyield = 14;
  if (has_annuyield()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(14, this->annuyield(), target);
  }
  
  // optional float fundvol = 15;
  if (has_fundvol()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(15, this->fundvol(), target);
  }
  
  // optional int32 managementcomid = 16;
  if (has_managementcomid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->managementcomid(), target);
  }
  
  // optional string managementcom = 17;
  if (has_managementcom()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->managementcom().data(), this->managementcom().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->managementcom(), target);
  }
  
  // optional string fundmanager = 18;
  if (has_fundmanager()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->fundmanager().data(), this->fundmanager().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->fundmanager(), target);
  }
  
  // optional string fundcustodian = 19;
  if (has_fundcustodian()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->fundcustodian().data(), this->fundcustodian().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->fundcustodian(), target);
  }
  
  // optional int32 starrank3 = 20;
  if (has_starrank3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->starrank3(), target);
  }
  
  // optional int32 starrank5 = 21;
  if (has_starrank5()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->starrank5(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileFinanceFund_FinanceFundDetail::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string secucode = 1;
    if (has_secucode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->secucode());
    }
    
    // required string secuname = 2;
    if (has_secuname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->secuname());
    }
    
    // required int32 secutype = 4;
    if (has_secutype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->secutype());
    }
    
    // optional float unitnav = 5;
    if (has_unitnav()) {
      total_size += 1 + 4;
    }
    
    // optional float accuunitnav = 6;
    if (has_accuunitnav()) {
      total_size += 1 + 4;
    }
    
    // optional float changerate = 7;
    if (has_changerate()) {
      total_size += 1 + 4;
    }
    
    // optional float changeratew = 8;
    if (has_changeratew()) {
      total_size += 1 + 4;
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional float changeratem = 9;
    if (has_changeratem()) {
      total_size += 1 + 4;
    }
    
    // optional float changerate3m = 10;
    if (has_changerate3m()) {
      total_size += 1 + 4;
    }
    
    // optional float changerate6m = 11;
    if (has_changerate6m()) {
      total_size += 1 + 4;
    }
    
    // optional float changeratey = 12;
    if (has_changeratey()) {
      total_size += 1 + 4;
    }
    
    // optional float dailyreturn = 13;
    if (has_dailyreturn()) {
      total_size += 1 + 4;
    }
    
    // optional float annuyield = 14;
    if (has_annuyield()) {
      total_size += 1 + 4;
    }
    
    // optional float fundvol = 15;
    if (has_fundvol()) {
      total_size += 1 + 4;
    }
    
    // optional int32 managementcomid = 16;
    if (has_managementcomid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->managementcomid());
    }
    
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional string managementcom = 17;
    if (has_managementcom()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->managementcom());
    }
    
    // optional string fundmanager = 18;
    if (has_fundmanager()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fundmanager());
    }
    
    // optional string fundcustodian = 19;
    if (has_fundcustodian()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fundcustodian());
    }
    
    // optional int32 starrank3 = 20;
    if (has_starrank3()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->starrank3());
    }
    
    // optional int32 starrank5 = 21;
    if (has_starrank5()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->starrank5());
    }
    
  }
  // repeated string secupy = 3;
  total_size += 1 * this->secupy_size();
  for (int i = 0; i < this->secupy_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->secupy(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileFinanceFund_FinanceFundDetail::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileFinanceFund_FinanceFundDetail* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileFinanceFund_FinanceFundDetail*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileFinanceFund_FinanceFundDetail::MergeFrom(const FileFinanceFund_FinanceFundDetail& from) {
  GOOGLE_CHECK_NE(&from, this);
  secupy_.MergeFrom(from.secupy_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_secucode()) {
      set_secucode(from.secucode());
    }
    if (from.has_secuname()) {
      set_secuname(from.secuname());
    }
    if (from.has_secutype()) {
      set_secutype(from.secutype());
    }
    if (from.has_unitnav()) {
      set_unitnav(from.unitnav());
    }
    if (from.has_accuunitnav()) {
      set_accuunitnav(from.accuunitnav());
    }
    if (from.has_changerate()) {
      set_changerate(from.changerate());
    }
    if (from.has_changeratew()) {
      set_changeratew(from.changeratew());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_changeratem()) {
      set_changeratem(from.changeratem());
    }
    if (from.has_changerate3m()) {
      set_changerate3m(from.changerate3m());
    }
    if (from.has_changerate6m()) {
      set_changerate6m(from.changerate6m());
    }
    if (from.has_changeratey()) {
      set_changeratey(from.changeratey());
    }
    if (from.has_dailyreturn()) {
      set_dailyreturn(from.dailyreturn());
    }
    if (from.has_annuyield()) {
      set_annuyield(from.annuyield());
    }
    if (from.has_fundvol()) {
      set_fundvol(from.fundvol());
    }
    if (from.has_managementcomid()) {
      set_managementcomid(from.managementcomid());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_managementcom()) {
      set_managementcom(from.managementcom());
    }
    if (from.has_fundmanager()) {
      set_fundmanager(from.fundmanager());
    }
    if (from.has_fundcustodian()) {
      set_fundcustodian(from.fundcustodian());
    }
    if (from.has_starrank3()) {
      set_starrank3(from.starrank3());
    }
    if (from.has_starrank5()) {
      set_starrank5(from.starrank5());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileFinanceFund_FinanceFundDetail::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileFinanceFund_FinanceFundDetail::CopyFrom(const FileFinanceFund_FinanceFundDetail& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileFinanceFund_FinanceFundDetail::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000b) != 0x0000000b) return false;
  
  return true;
}

void FileFinanceFund_FinanceFundDetail::Swap(FileFinanceFund_FinanceFundDetail* other) {
  if (other != this) {
    std::swap(secucode_, other->secucode_);
    std::swap(secuname_, other->secuname_);
    secupy_.Swap(&other->secupy_);
    std::swap(secutype_, other->secutype_);
    std::swap(unitnav_, other->unitnav_);
    std::swap(accuunitnav_, other->accuunitnav_);
    std::swap(changerate_, other->changerate_);
    std::swap(changeratew_, other->changeratew_);
    std::swap(changeratem_, other->changeratem_);
    std::swap(changerate3m_, other->changerate3m_);
    std::swap(changerate6m_, other->changerate6m_);
    std::swap(changeratey_, other->changeratey_);
    std::swap(dailyreturn_, other->dailyreturn_);
    std::swap(annuyield_, other->annuyield_);
    std::swap(fundvol_, other->fundvol_);
    std::swap(managementcomid_, other->managementcomid_);
    std::swap(managementcom_, other->managementcom_);
    std::swap(fundmanager_, other->fundmanager_);
    std::swap(fundcustodian_, other->fundcustodian_);
    std::swap(starrank3_, other->starrank3_);
    std::swap(starrank5_, other->starrank5_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileFinanceFund_FinanceFundDetail::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileFinanceFund_FinanceFundDetail_descriptor_;
  metadata.reflection = FileFinanceFund_FinanceFundDetail_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int FileFinanceFund::kFinancefunddetailFieldNumber;
#endif  // !_MSC_VER

FileFinanceFund::FileFinanceFund()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileFinanceFund::InitAsDefaultInstance() {
}

FileFinanceFund::FileFinanceFund(const FileFinanceFund& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileFinanceFund::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileFinanceFund::~FileFinanceFund() {
  SharedDtor();
}

void FileFinanceFund::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FileFinanceFund::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileFinanceFund::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileFinanceFund_descriptor_;
}

const FileFinanceFund& FileFinanceFund::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_file_2eproto();  return *default_instance_;
}

FileFinanceFund* FileFinanceFund::default_instance_ = NULL;

FileFinanceFund* FileFinanceFund::New() const {
  return new FileFinanceFund;
}

void FileFinanceFund::Clear() {
  financefunddetail_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileFinanceFund::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .quote.FileFinanceFund.FinanceFundDetail financefunddetail = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_financefunddetail:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_financefunddetail()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_financefunddetail;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FileFinanceFund::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .quote.FileFinanceFund.FinanceFundDetail financefunddetail = 1;
  for (int i = 0; i < this->financefunddetail_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->financefunddetail(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileFinanceFund::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .quote.FileFinanceFund.FinanceFundDetail financefunddetail = 1;
  for (int i = 0; i < this->financefunddetail_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->financefunddetail(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileFinanceFund::ByteSize() const {
  int total_size = 0;
  
  // repeated .quote.FileFinanceFund.FinanceFundDetail financefunddetail = 1;
  total_size += 1 * this->financefunddetail_size();
  for (int i = 0; i < this->financefunddetail_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->financefunddetail(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileFinanceFund::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileFinanceFund* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileFinanceFund*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileFinanceFund::MergeFrom(const FileFinanceFund& from) {
  GOOGLE_CHECK_NE(&from, this);
  financefunddetail_.MergeFrom(from.financefunddetail_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileFinanceFund::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileFinanceFund::CopyFrom(const FileFinanceFund& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileFinanceFund::IsInitialized() const {
  
  for (int i = 0; i < financefunddetail_size(); i++) {
    if (!this->financefunddetail(i).IsInitialized()) return false;
  }
  return true;
}

void FileFinanceFund::Swap(FileFinanceFund* other) {
  if (other != this) {
    financefunddetail_.Swap(&other->financefunddetail_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileFinanceFund::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileFinanceFund_descriptor_;
  metadata.reflection = FileFinanceFund_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FileZsbx_ZsbxDetail::kSecucodeFieldNumber;
const int FileZsbx_ZsbxDetail::kYbslFieldNumber;
const int FileZsbx_ZsbxDetail::kYbjjFieldNumber;
const int FileZsbx_ZsbxDetail::kPjgbFieldNumber;
const int FileZsbx_ZsbxDetail::kZszFieldNumber;
const int FileZsbx_ZsbxDetail::kZbFieldNumber;
const int FileZsbx_ZsbxDetail::kJtsylFieldNumber;
#endif  // !_MSC_VER

FileZsbx_ZsbxDetail::FileZsbx_ZsbxDetail()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileZsbx_ZsbxDetail::InitAsDefaultInstance() {
}

FileZsbx_ZsbxDetail::FileZsbx_ZsbxDetail(const FileZsbx_ZsbxDetail& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileZsbx_ZsbxDetail::SharedCtor() {
  _cached_size_ = 0;
  secucode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ybsl_ = 0;
  ybjj_ = 0;
  pjgb_ = 0;
  zsz_ = 0;
  zb_ = 0;
  jtsyl_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileZsbx_ZsbxDetail::~FileZsbx_ZsbxDetail() {
  SharedDtor();
}

void FileZsbx_ZsbxDetail::SharedDtor() {
  if (secucode_ != &::google::protobuf::internal::kEmptyString) {
    delete secucode_;
  }
  if (this != default_instance_) {
  }
}

void FileZsbx_ZsbxDetail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileZsbx_ZsbxDetail::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileZsbx_ZsbxDetail_descriptor_;
}

const FileZsbx_ZsbxDetail& FileZsbx_ZsbxDetail::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_file_2eproto();  return *default_instance_;
}

FileZsbx_ZsbxDetail* FileZsbx_ZsbxDetail::default_instance_ = NULL;

FileZsbx_ZsbxDetail* FileZsbx_ZsbxDetail::New() const {
  return new FileZsbx_ZsbxDetail;
}

void FileZsbx_ZsbxDetail::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_secucode()) {
      if (secucode_ != &::google::protobuf::internal::kEmptyString) {
        secucode_->clear();
      }
    }
    ybsl_ = 0;
    ybjj_ = 0;
    pjgb_ = 0;
    zsz_ = 0;
    zb_ = 0;
    jtsyl_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileZsbx_ZsbxDetail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string secucode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_secucode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->secucode().data(), this->secucode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_ybsl;
        break;
      }
      
      // optional int32 ybsl = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ybsl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ybsl_)));
          set_has_ybsl();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(29)) goto parse_ybjj;
        break;
      }
      
      // optional float ybjj = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_ybjj:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ybjj_)));
          set_has_ybjj();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(37)) goto parse_pjgb;
        break;
      }
      
      // optional float pjgb = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_pjgb:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pjgb_)));
          set_has_pjgb();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(45)) goto parse_zsz;
        break;
      }
      
      // optional float zsz = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_zsz:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &zsz_)));
          set_has_zsz();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(53)) goto parse_zb;
        break;
      }
      
      // optional float zb = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_zb:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &zb_)));
          set_has_zb();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(61)) goto parse_jtsyl;
        break;
      }
      
      // optional float jtsyl = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_jtsyl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &jtsyl_)));
          set_has_jtsyl();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FileZsbx_ZsbxDetail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string secucode = 1;
  if (has_secucode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->secucode().data(), this->secucode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->secucode(), output);
  }
  
  // optional int32 ybsl = 2;
  if (has_ybsl()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ybsl(), output);
  }
  
  // optional float ybjj = 3;
  if (has_ybjj()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->ybjj(), output);
  }
  
  // optional float pjgb = 4;
  if (has_pjgb()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->pjgb(), output);
  }
  
  // optional float zsz = 5;
  if (has_zsz()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->zsz(), output);
  }
  
  // optional float zb = 6;
  if (has_zb()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->zb(), output);
  }
  
  // optional float jtsyl = 7;
  if (has_jtsyl()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->jtsyl(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileZsbx_ZsbxDetail::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string secucode = 1;
  if (has_secucode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->secucode().data(), this->secucode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->secucode(), target);
  }
  
  // optional int32 ybsl = 2;
  if (has_ybsl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ybsl(), target);
  }
  
  // optional float ybjj = 3;
  if (has_ybjj()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->ybjj(), target);
  }
  
  // optional float pjgb = 4;
  if (has_pjgb()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->pjgb(), target);
  }
  
  // optional float zsz = 5;
  if (has_zsz()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->zsz(), target);
  }
  
  // optional float zb = 6;
  if (has_zb()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->zb(), target);
  }
  
  // optional float jtsyl = 7;
  if (has_jtsyl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->jtsyl(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileZsbx_ZsbxDetail::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string secucode = 1;
    if (has_secucode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->secucode());
    }
    
    // optional int32 ybsl = 2;
    if (has_ybsl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ybsl());
    }
    
    // optional float ybjj = 3;
    if (has_ybjj()) {
      total_size += 1 + 4;
    }
    
    // optional float pjgb = 4;
    if (has_pjgb()) {
      total_size += 1 + 4;
    }
    
    // optional float zsz = 5;
    if (has_zsz()) {
      total_size += 1 + 4;
    }
    
    // optional float zb = 6;
    if (has_zb()) {
      total_size += 1 + 4;
    }
    
    // optional float jtsyl = 7;
    if (has_jtsyl()) {
      total_size += 1 + 4;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileZsbx_ZsbxDetail::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileZsbx_ZsbxDetail* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileZsbx_ZsbxDetail*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileZsbx_ZsbxDetail::MergeFrom(const FileZsbx_ZsbxDetail& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_secucode()) {
      set_secucode(from.secucode());
    }
    if (from.has_ybsl()) {
      set_ybsl(from.ybsl());
    }
    if (from.has_ybjj()) {
      set_ybjj(from.ybjj());
    }
    if (from.has_pjgb()) {
      set_pjgb(from.pjgb());
    }
    if (from.has_zsz()) {
      set_zsz(from.zsz());
    }
    if (from.has_zb()) {
      set_zb(from.zb());
    }
    if (from.has_jtsyl()) {
      set_jtsyl(from.jtsyl());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileZsbx_ZsbxDetail::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileZsbx_ZsbxDetail::CopyFrom(const FileZsbx_ZsbxDetail& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileZsbx_ZsbxDetail::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void FileZsbx_ZsbxDetail::Swap(FileZsbx_ZsbxDetail* other) {
  if (other != this) {
    std::swap(secucode_, other->secucode_);
    std::swap(ybsl_, other->ybsl_);
    std::swap(ybjj_, other->ybjj_);
    std::swap(pjgb_, other->pjgb_);
    std::swap(zsz_, other->zsz_);
    std::swap(zb_, other->zb_);
    std::swap(jtsyl_, other->jtsyl_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileZsbx_ZsbxDetail::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileZsbx_ZsbxDetail_descriptor_;
  metadata.reflection = FileZsbx_ZsbxDetail_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int FileZsbx::kZsbxdetailFieldNumber;
#endif  // !_MSC_VER

FileZsbx::FileZsbx()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileZsbx::InitAsDefaultInstance() {
}

FileZsbx::FileZsbx(const FileZsbx& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileZsbx::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileZsbx::~FileZsbx() {
  SharedDtor();
}

void FileZsbx::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FileZsbx::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileZsbx::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileZsbx_descriptor_;
}

const FileZsbx& FileZsbx::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_file_2eproto();  return *default_instance_;
}

FileZsbx* FileZsbx::default_instance_ = NULL;

FileZsbx* FileZsbx::New() const {
  return new FileZsbx;
}

void FileZsbx::Clear() {
  zsbxdetail_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileZsbx::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .quote.FileZsbx.ZsbxDetail zsbxdetail = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_zsbxdetail:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_zsbxdetail()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_zsbxdetail;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FileZsbx::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .quote.FileZsbx.ZsbxDetail zsbxdetail = 1;
  for (int i = 0; i < this->zsbxdetail_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->zsbxdetail(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileZsbx::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .quote.FileZsbx.ZsbxDetail zsbxdetail = 1;
  for (int i = 0; i < this->zsbxdetail_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->zsbxdetail(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileZsbx::ByteSize() const {
  int total_size = 0;
  
  // repeated .quote.FileZsbx.ZsbxDetail zsbxdetail = 1;
  total_size += 1 * this->zsbxdetail_size();
  for (int i = 0; i < this->zsbxdetail_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->zsbxdetail(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileZsbx::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileZsbx* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileZsbx*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileZsbx::MergeFrom(const FileZsbx& from) {
  GOOGLE_CHECK_NE(&from, this);
  zsbxdetail_.MergeFrom(from.zsbxdetail_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileZsbx::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileZsbx::CopyFrom(const FileZsbx& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileZsbx::IsInitialized() const {
  
  for (int i = 0; i < zsbxdetail_size(); i++) {
    if (!this->zsbxdetail(i).IsInitialized()) return false;
  }
  return true;
}

void FileZsbx::Swap(FileZsbx* other) {
  if (other != this) {
    zsbxdetail_.Swap(&other->zsbxdetail_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileZsbx::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileZsbx_descriptor_;
  metadata.reflection = FileZsbx_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* FileBlock_Block_Name_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileBlock_Block_Name_descriptor_;
}
bool FileBlock_Block_Name_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const FileBlock_Block_Name FileBlock_Block::INDUSTRY;
const FileBlock_Block_Name FileBlock_Block::CSRCINDUSTRY;
const FileBlock_Block_Name FileBlock_Block::AREA;
const FileBlock_Block_Name FileBlock_Block::CONCEPT;
const FileBlock_Block_Name FileBlock_Block::Name_MIN;
const FileBlock_Block_Name FileBlock_Block::Name_MAX;
const int FileBlock_Block::Name_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int FileBlock_Block_BlockDetail::kBlockidFieldNumber;
const int FileBlock_Block_BlockDetail::kBlocknameFieldNumber;
#endif  // !_MSC_VER

FileBlock_Block_BlockDetail::FileBlock_Block_BlockDetail()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileBlock_Block_BlockDetail::InitAsDefaultInstance() {
}

FileBlock_Block_BlockDetail::FileBlock_Block_BlockDetail(const FileBlock_Block_BlockDetail& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileBlock_Block_BlockDetail::SharedCtor() {
  _cached_size_ = 0;
  blockid_ = 0;
  blockname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileBlock_Block_BlockDetail::~FileBlock_Block_BlockDetail() {
  SharedDtor();
}

void FileBlock_Block_BlockDetail::SharedDtor() {
  if (blockname_ != &::google::protobuf::internal::kEmptyString) {
    delete blockname_;
  }
  if (this != default_instance_) {
  }
}

void FileBlock_Block_BlockDetail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileBlock_Block_BlockDetail::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileBlock_Block_BlockDetail_descriptor_;
}

const FileBlock_Block_BlockDetail& FileBlock_Block_BlockDetail::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_file_2eproto();  return *default_instance_;
}

FileBlock_Block_BlockDetail* FileBlock_Block_BlockDetail::default_instance_ = NULL;

FileBlock_Block_BlockDetail* FileBlock_Block_BlockDetail::New() const {
  return new FileBlock_Block_BlockDetail;
}

void FileBlock_Block_BlockDetail::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    blockid_ = 0;
    if (has_blockname()) {
      if (blockname_ != &::google::protobuf::internal::kEmptyString) {
        blockname_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileBlock_Block_BlockDetail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 blockid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &blockid_)));
          set_has_blockid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_blockname;
        break;
      }
      
      // required string blockname = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_blockname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_blockname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->blockname().data(), this->blockname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FileBlock_Block_BlockDetail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 blockid = 1;
  if (has_blockid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->blockid(), output);
  }
  
  // required string blockname = 2;
  if (has_blockname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->blockname().data(), this->blockname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->blockname(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileBlock_Block_BlockDetail::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 blockid = 1;
  if (has_blockid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->blockid(), target);
  }
  
  // required string blockname = 2;
  if (has_blockname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->blockname().data(), this->blockname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->blockname(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileBlock_Block_BlockDetail::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 blockid = 1;
    if (has_blockid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->blockid());
    }
    
    // required string blockname = 2;
    if (has_blockname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->blockname());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileBlock_Block_BlockDetail::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileBlock_Block_BlockDetail* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileBlock_Block_BlockDetail*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileBlock_Block_BlockDetail::MergeFrom(const FileBlock_Block_BlockDetail& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_blockid()) {
      set_blockid(from.blockid());
    }
    if (from.has_blockname()) {
      set_blockname(from.blockname());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileBlock_Block_BlockDetail::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileBlock_Block_BlockDetail::CopyFrom(const FileBlock_Block_BlockDetail& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileBlock_Block_BlockDetail::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void FileBlock_Block_BlockDetail::Swap(FileBlock_Block_BlockDetail* other) {
  if (other != this) {
    std::swap(blockid_, other->blockid_);
    std::swap(blockname_, other->blockname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileBlock_Block_BlockDetail::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileBlock_Block_BlockDetail_descriptor_;
  metadata.reflection = FileBlock_Block_BlockDetail_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int FileBlock_Block::kNameFieldNumber;
const int FileBlock_Block::kBlockdetailFieldNumber;
#endif  // !_MSC_VER

FileBlock_Block::FileBlock_Block()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileBlock_Block::InitAsDefaultInstance() {
}

FileBlock_Block::FileBlock_Block(const FileBlock_Block& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileBlock_Block::SharedCtor() {
  _cached_size_ = 0;
  name_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileBlock_Block::~FileBlock_Block() {
  SharedDtor();
}

void FileBlock_Block::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FileBlock_Block::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileBlock_Block::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileBlock_Block_descriptor_;
}

const FileBlock_Block& FileBlock_Block::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_file_2eproto();  return *default_instance_;
}

FileBlock_Block* FileBlock_Block::default_instance_ = NULL;

FileBlock_Block* FileBlock_Block::New() const {
  return new FileBlock_Block;
}

void FileBlock_Block::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    name_ = 1;
  }
  blockdetail_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileBlock_Block::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .quote.FileBlock.Block.Name name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::quote::FileBlock_Block_Name_IsValid(value)) {
            set_name(static_cast< ::quote::FileBlock_Block_Name >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_blockdetail;
        break;
      }
      
      // repeated .quote.FileBlock.Block.BlockDetail blockdetail = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_blockdetail:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_blockdetail()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_blockdetail;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FileBlock_Block::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .quote.FileBlock.Block.Name name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->name(), output);
  }
  
  // repeated .quote.FileBlock.Block.BlockDetail blockdetail = 2;
  for (int i = 0; i < this->blockdetail_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->blockdetail(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileBlock_Block::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .quote.FileBlock.Block.Name name = 1;
  if (has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->name(), target);
  }
  
  // repeated .quote.FileBlock.Block.BlockDetail blockdetail = 2;
  for (int i = 0; i < this->blockdetail_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->blockdetail(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileBlock_Block::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .quote.FileBlock.Block.Name name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->name());
    }
    
  }
  // repeated .quote.FileBlock.Block.BlockDetail blockdetail = 2;
  total_size += 1 * this->blockdetail_size();
  for (int i = 0; i < this->blockdetail_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->blockdetail(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileBlock_Block::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileBlock_Block* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileBlock_Block*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileBlock_Block::MergeFrom(const FileBlock_Block& from) {
  GOOGLE_CHECK_NE(&from, this);
  blockdetail_.MergeFrom(from.blockdetail_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileBlock_Block::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileBlock_Block::CopyFrom(const FileBlock_Block& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileBlock_Block::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  for (int i = 0; i < blockdetail_size(); i++) {
    if (!this->blockdetail(i).IsInitialized()) return false;
  }
  return true;
}

void FileBlock_Block::Swap(FileBlock_Block* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    blockdetail_.Swap(&other->blockdetail_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileBlock_Block::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileBlock_Block_descriptor_;
  metadata.reflection = FileBlock_Block_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int FileBlock::kBlockFieldNumber;
#endif  // !_MSC_VER

FileBlock::FileBlock()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileBlock::InitAsDefaultInstance() {
}

FileBlock::FileBlock(const FileBlock& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileBlock::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileBlock::~FileBlock() {
  SharedDtor();
}

void FileBlock::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FileBlock::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileBlock::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileBlock_descriptor_;
}

const FileBlock& FileBlock::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_file_2eproto();  return *default_instance_;
}

FileBlock* FileBlock::default_instance_ = NULL;

FileBlock* FileBlock::New() const {
  return new FileBlock;
}

void FileBlock::Clear() {
  block_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileBlock::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .quote.FileBlock.Block block = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_block:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_block()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_block;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FileBlock::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .quote.FileBlock.Block block = 1;
  for (int i = 0; i < this->block_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->block(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileBlock::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .quote.FileBlock.Block block = 1;
  for (int i = 0; i < this->block_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->block(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileBlock::ByteSize() const {
  int total_size = 0;
  
  // repeated .quote.FileBlock.Block block = 1;
  total_size += 1 * this->block_size();
  for (int i = 0; i < this->block_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->block(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileBlock::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileBlock* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileBlock*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileBlock::MergeFrom(const FileBlock& from) {
  GOOGLE_CHECK_NE(&from, this);
  block_.MergeFrom(from.block_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileBlock::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileBlock::CopyFrom(const FileBlock& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileBlock::IsInitialized() const {
  
  for (int i = 0; i < block_size(); i++) {
    if (!this->block(i).IsInitialized()) return false;
  }
  return true;
}

void FileBlock::Swap(FileBlock* other) {
  if (other != this) {
    block_.Swap(&other->block_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileBlock::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileBlock_descriptor_;
  metadata.reflection = FileBlock_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FileBlockStock_BlockStock_BlockStockDetail::kSecucodeFieldNumber;
const int FileBlockStock_BlockStock_BlockStockDetail::kExchangeFieldNumber;
#endif  // !_MSC_VER

FileBlockStock_BlockStock_BlockStockDetail::FileBlockStock_BlockStock_BlockStockDetail()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileBlockStock_BlockStock_BlockStockDetail::InitAsDefaultInstance() {
}

FileBlockStock_BlockStock_BlockStockDetail::FileBlockStock_BlockStock_BlockStockDetail(const FileBlockStock_BlockStock_BlockStockDetail& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileBlockStock_BlockStock_BlockStockDetail::SharedCtor() {
  _cached_size_ = 0;
  secucode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  exchange_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileBlockStock_BlockStock_BlockStockDetail::~FileBlockStock_BlockStock_BlockStockDetail() {
  SharedDtor();
}

void FileBlockStock_BlockStock_BlockStockDetail::SharedDtor() {
  if (secucode_ != &::google::protobuf::internal::kEmptyString) {
    delete secucode_;
  }
  if (this != default_instance_) {
  }
}

void FileBlockStock_BlockStock_BlockStockDetail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileBlockStock_BlockStock_BlockStockDetail::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileBlockStock_BlockStock_BlockStockDetail_descriptor_;
}

const FileBlockStock_BlockStock_BlockStockDetail& FileBlockStock_BlockStock_BlockStockDetail::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_file_2eproto();  return *default_instance_;
}

FileBlockStock_BlockStock_BlockStockDetail* FileBlockStock_BlockStock_BlockStockDetail::default_instance_ = NULL;

FileBlockStock_BlockStock_BlockStockDetail* FileBlockStock_BlockStock_BlockStockDetail::New() const {
  return new FileBlockStock_BlockStock_BlockStockDetail;
}

void FileBlockStock_BlockStock_BlockStockDetail::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_secucode()) {
      if (secucode_ != &::google::protobuf::internal::kEmptyString) {
        secucode_->clear();
      }
    }
    exchange_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileBlockStock_BlockStock_BlockStockDetail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string secucode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_secucode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->secucode().data(), this->secucode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_exchange;
        break;
      }
      
      // required int32 exchange = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exchange:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exchange_)));
          set_has_exchange();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FileBlockStock_BlockStock_BlockStockDetail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string secucode = 1;
  if (has_secucode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->secucode().data(), this->secucode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->secucode(), output);
  }
  
  // required int32 exchange = 2;
  if (has_exchange()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->exchange(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileBlockStock_BlockStock_BlockStockDetail::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string secucode = 1;
  if (has_secucode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->secucode().data(), this->secucode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->secucode(), target);
  }
  
  // required int32 exchange = 2;
  if (has_exchange()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->exchange(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileBlockStock_BlockStock_BlockStockDetail::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string secucode = 1;
    if (has_secucode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->secucode());
    }
    
    // required int32 exchange = 2;
    if (has_exchange()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exchange());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileBlockStock_BlockStock_BlockStockDetail::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileBlockStock_BlockStock_BlockStockDetail* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileBlockStock_BlockStock_BlockStockDetail*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileBlockStock_BlockStock_BlockStockDetail::MergeFrom(const FileBlockStock_BlockStock_BlockStockDetail& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_secucode()) {
      set_secucode(from.secucode());
    }
    if (from.has_exchange()) {
      set_exchange(from.exchange());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileBlockStock_BlockStock_BlockStockDetail::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileBlockStock_BlockStock_BlockStockDetail::CopyFrom(const FileBlockStock_BlockStock_BlockStockDetail& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileBlockStock_BlockStock_BlockStockDetail::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void FileBlockStock_BlockStock_BlockStockDetail::Swap(FileBlockStock_BlockStock_BlockStockDetail* other) {
  if (other != this) {
    std::swap(secucode_, other->secucode_);
    std::swap(exchange_, other->exchange_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileBlockStock_BlockStock_BlockStockDetail::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileBlockStock_BlockStock_BlockStockDetail_descriptor_;
  metadata.reflection = FileBlockStock_BlockStock_BlockStockDetail_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int FileBlockStock_BlockStock::kBlockidFieldNumber;
const int FileBlockStock_BlockStock::kBlockstockdetailFieldNumber;
#endif  // !_MSC_VER

FileBlockStock_BlockStock::FileBlockStock_BlockStock()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileBlockStock_BlockStock::InitAsDefaultInstance() {
}

FileBlockStock_BlockStock::FileBlockStock_BlockStock(const FileBlockStock_BlockStock& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileBlockStock_BlockStock::SharedCtor() {
  _cached_size_ = 0;
  blockid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileBlockStock_BlockStock::~FileBlockStock_BlockStock() {
  SharedDtor();
}

void FileBlockStock_BlockStock::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FileBlockStock_BlockStock::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileBlockStock_BlockStock::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileBlockStock_BlockStock_descriptor_;
}

const FileBlockStock_BlockStock& FileBlockStock_BlockStock::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_file_2eproto();  return *default_instance_;
}

FileBlockStock_BlockStock* FileBlockStock_BlockStock::default_instance_ = NULL;

FileBlockStock_BlockStock* FileBlockStock_BlockStock::New() const {
  return new FileBlockStock_BlockStock;
}

void FileBlockStock_BlockStock::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    blockid_ = 0;
  }
  blockstockdetail_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileBlockStock_BlockStock::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 blockid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &blockid_)));
          set_has_blockid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_blockstockdetail;
        break;
      }
      
      // repeated .quote.FileBlockStock.BlockStock.BlockStockDetail blockstockdetail = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_blockstockdetail:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_blockstockdetail()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_blockstockdetail;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FileBlockStock_BlockStock::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 blockid = 1;
  if (has_blockid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->blockid(), output);
  }
  
  // repeated .quote.FileBlockStock.BlockStock.BlockStockDetail blockstockdetail = 2;
  for (int i = 0; i < this->blockstockdetail_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->blockstockdetail(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileBlockStock_BlockStock::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 blockid = 1;
  if (has_blockid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->blockid(), target);
  }
  
  // repeated .quote.FileBlockStock.BlockStock.BlockStockDetail blockstockdetail = 2;
  for (int i = 0; i < this->blockstockdetail_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->blockstockdetail(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileBlockStock_BlockStock::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 blockid = 1;
    if (has_blockid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->blockid());
    }
    
  }
  // repeated .quote.FileBlockStock.BlockStock.BlockStockDetail blockstockdetail = 2;
  total_size += 1 * this->blockstockdetail_size();
  for (int i = 0; i < this->blockstockdetail_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->blockstockdetail(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileBlockStock_BlockStock::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileBlockStock_BlockStock* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileBlockStock_BlockStock*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileBlockStock_BlockStock::MergeFrom(const FileBlockStock_BlockStock& from) {
  GOOGLE_CHECK_NE(&from, this);
  blockstockdetail_.MergeFrom(from.blockstockdetail_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_blockid()) {
      set_blockid(from.blockid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileBlockStock_BlockStock::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileBlockStock_BlockStock::CopyFrom(const FileBlockStock_BlockStock& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileBlockStock_BlockStock::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  for (int i = 0; i < blockstockdetail_size(); i++) {
    if (!this->blockstockdetail(i).IsInitialized()) return false;
  }
  return true;
}

void FileBlockStock_BlockStock::Swap(FileBlockStock_BlockStock* other) {
  if (other != this) {
    std::swap(blockid_, other->blockid_);
    blockstockdetail_.Swap(&other->blockstockdetail_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileBlockStock_BlockStock::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileBlockStock_BlockStock_descriptor_;
  metadata.reflection = FileBlockStock_BlockStock_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int FileBlockStock::kBlockstockFieldNumber;
#endif  // !_MSC_VER

FileBlockStock::FileBlockStock()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileBlockStock::InitAsDefaultInstance() {
}

FileBlockStock::FileBlockStock(const FileBlockStock& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileBlockStock::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileBlockStock::~FileBlockStock() {
  SharedDtor();
}

void FileBlockStock::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FileBlockStock::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileBlockStock::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileBlockStock_descriptor_;
}

const FileBlockStock& FileBlockStock::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_file_2eproto();  return *default_instance_;
}

FileBlockStock* FileBlockStock::default_instance_ = NULL;

FileBlockStock* FileBlockStock::New() const {
  return new FileBlockStock;
}

void FileBlockStock::Clear() {
  blockstock_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileBlockStock::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .quote.FileBlockStock.BlockStock blockstock = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_blockstock:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_blockstock()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_blockstock;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FileBlockStock::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .quote.FileBlockStock.BlockStock blockstock = 1;
  for (int i = 0; i < this->blockstock_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->blockstock(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileBlockStock::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .quote.FileBlockStock.BlockStock blockstock = 1;
  for (int i = 0; i < this->blockstock_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->blockstock(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileBlockStock::ByteSize() const {
  int total_size = 0;
  
  // repeated .quote.FileBlockStock.BlockStock blockstock = 1;
  total_size += 1 * this->blockstock_size();
  for (int i = 0; i < this->blockstock_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->blockstock(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileBlockStock::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileBlockStock* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileBlockStock*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileBlockStock::MergeFrom(const FileBlockStock& from) {
  GOOGLE_CHECK_NE(&from, this);
  blockstock_.MergeFrom(from.blockstock_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileBlockStock::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileBlockStock::CopyFrom(const FileBlockStock& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileBlockStock::IsInitialized() const {
  
  for (int i = 0; i < blockstock_size(); i++) {
    if (!this->blockstock(i).IsInitialized()) return false;
  }
  return true;
}

void FileBlockStock::Swap(FileBlockStock* other) {
  if (other != this) {
    blockstock_.Swap(&other->blockstock_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileBlockStock::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileBlockStock_descriptor_;
  metadata.reflection = FileBlockStock_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* FileMd5_Md5_FileName_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileMd5_Md5_FileName_descriptor_;
}
bool FileMd5_Md5_FileName_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const FileMd5_Md5_FileName FileMd5_Md5::SH_STOCK;
const FileMd5_Md5_FileName FileMd5_Md5::SZ_STOCK;
const FileMd5_Md5_FileName FileMd5_Md5::FINANCE_DATA;
const FileMd5_Md5_FileName FileMd5_Md5::KF_FINANCE;
const FileMd5_Md5_FileName FileMd5_Md5::BLOCK_DATA;
const FileMd5_Md5_FileName FileMd5_Md5::BLOCKSTOCK_DATA;
const FileMd5_Md5_FileName FileMd5_Md5::FileName_MIN;
const FileMd5_Md5_FileName FileMd5_Md5::FileName_MAX;
const int FileMd5_Md5::FileName_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int FileMd5_Md5::kFilenameFieldNumber;
const int FileMd5_Md5::kMd5CodeFieldNumber;
#endif  // !_MSC_VER

FileMd5_Md5::FileMd5_Md5()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileMd5_Md5::InitAsDefaultInstance() {
}

FileMd5_Md5::FileMd5_Md5(const FileMd5_Md5& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileMd5_Md5::SharedCtor() {
  _cached_size_ = 0;
  filename_ = 1;
  md5code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileMd5_Md5::~FileMd5_Md5() {
  SharedDtor();
}

void FileMd5_Md5::SharedDtor() {
  if (md5code_ != &::google::protobuf::internal::kEmptyString) {
    delete md5code_;
  }
  if (this != default_instance_) {
  }
}

void FileMd5_Md5::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileMd5_Md5::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileMd5_Md5_descriptor_;
}

const FileMd5_Md5& FileMd5_Md5::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_file_2eproto();  return *default_instance_;
}

FileMd5_Md5* FileMd5_Md5::default_instance_ = NULL;

FileMd5_Md5* FileMd5_Md5::New() const {
  return new FileMd5_Md5;
}

void FileMd5_Md5::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    filename_ = 1;
    if (has_md5code()) {
      if (md5code_ != &::google::protobuf::internal::kEmptyString) {
        md5code_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileMd5_Md5::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .quote.FileMd5.Md5.FileName filename = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::quote::FileMd5_Md5_FileName_IsValid(value)) {
            set_filename(static_cast< ::quote::FileMd5_Md5_FileName >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_md5code;
        break;
      }
      
      // required string md5code = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_md5code:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_md5code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->md5code().data(), this->md5code().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FileMd5_Md5::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .quote.FileMd5.Md5.FileName filename = 1;
  if (has_filename()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->filename(), output);
  }
  
  // required string md5code = 2;
  if (has_md5code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->md5code().data(), this->md5code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->md5code(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileMd5_Md5::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .quote.FileMd5.Md5.FileName filename = 1;
  if (has_filename()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->filename(), target);
  }
  
  // required string md5code = 2;
  if (has_md5code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->md5code().data(), this->md5code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->md5code(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileMd5_Md5::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .quote.FileMd5.Md5.FileName filename = 1;
    if (has_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->filename());
    }
    
    // required string md5code = 2;
    if (has_md5code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->md5code());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileMd5_Md5::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileMd5_Md5* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileMd5_Md5*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileMd5_Md5::MergeFrom(const FileMd5_Md5& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_filename()) {
      set_filename(from.filename());
    }
    if (from.has_md5code()) {
      set_md5code(from.md5code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileMd5_Md5::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileMd5_Md5::CopyFrom(const FileMd5_Md5& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileMd5_Md5::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void FileMd5_Md5::Swap(FileMd5_Md5* other) {
  if (other != this) {
    std::swap(filename_, other->filename_);
    std::swap(md5code_, other->md5code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileMd5_Md5::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileMd5_Md5_descriptor_;
  metadata.reflection = FileMd5_Md5_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int FileMd5::kMd5FieldNumber;
#endif  // !_MSC_VER

FileMd5::FileMd5()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileMd5::InitAsDefaultInstance() {
}

FileMd5::FileMd5(const FileMd5& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileMd5::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileMd5::~FileMd5() {
  SharedDtor();
}

void FileMd5::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FileMd5::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileMd5::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileMd5_descriptor_;
}

const FileMd5& FileMd5::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_file_2eproto();  return *default_instance_;
}

FileMd5* FileMd5::default_instance_ = NULL;

FileMd5* FileMd5::New() const {
  return new FileMd5;
}

void FileMd5::Clear() {
  md5_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileMd5::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .quote.FileMd5.Md5 md5 = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_md5:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_md5()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_md5;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FileMd5::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .quote.FileMd5.Md5 md5 = 1;
  for (int i = 0; i < this->md5_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->md5(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileMd5::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .quote.FileMd5.Md5 md5 = 1;
  for (int i = 0; i < this->md5_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->md5(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileMd5::ByteSize() const {
  int total_size = 0;
  
  // repeated .quote.FileMd5.Md5 md5 = 1;
  total_size += 1 * this->md5_size();
  for (int i = 0; i < this->md5_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->md5(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileMd5::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileMd5* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileMd5*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileMd5::MergeFrom(const FileMd5& from) {
  GOOGLE_CHECK_NE(&from, this);
  md5_.MergeFrom(from.md5_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileMd5::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileMd5::CopyFrom(const FileMd5& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileMd5::IsInitialized() const {
  
  for (int i = 0; i < md5_size(); i++) {
    if (!this->md5(i).IsInitialized()) return false;
  }
  return true;
}

void FileMd5::Swap(FileMd5* other) {
  if (other != this) {
    md5_.Swap(&other->md5_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileMd5::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileMd5_descriptor_;
  metadata.reflection = FileMd5_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace quote

// @@protoc_insertion_point(global_scope)
